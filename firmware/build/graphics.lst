ARM GAS  /tmp/ccYF30DA.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"graphics.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.IPS_SetPixel_buf,"ax",%progbits
  16              		.align	1
  17              		.global	IPS_SetPixel_buf
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	IPS_SetPixel_buf:
  25              	.LVL0:
  26              	.LFB42:
  27              		.file 1 "Src/graphics.c"
   1:Src/graphics.c **** #include "graphics.h"
   2:Src/graphics.c **** 
   3:Src/graphics.c **** 
   4:Src/graphics.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
   5:Src/graphics.c **** 
   6:Src/graphics.c **** void IPS_DrawString_Buf(uint16_t x, uint16_t y, const char * pString, uint8_t len, sFONT* Font, uin
   7:Src/graphics.c **** {
   8:Src/graphics.c ****   uint16_t _x = x;
   9:Src/graphics.c ****   uint16_t _y = y;
  10:Src/graphics.c **** 
  11:Src/graphics.c ****   if (x > IPS_WIDTH-1 || y > IPS_HEIGHT-1) return;
  12:Src/graphics.c **** 
  13:Src/graphics.c ****   while (* pString != '\0') {
  14:Src/graphics.c ****     if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
  15:Src/graphics.c ****       _x = x;
  16:Src/graphics.c ****       _y += Font->Height;
  17:Src/graphics.c ****     }
  18:Src/graphics.c ****     if ((_y  + Font->Height ) > IPS_HEIGHT-1 ) {
  19:Src/graphics.c ****       _x = x;
  20:Src/graphics.c ****       _y = y;
  21:Src/graphics.c ****     }
  22:Src/graphics.c **** 
  23:Src/graphics.c ****     IPS_DrawChar_Buf(_x, _y, * pString, Font, Color_Background, Color_Foreground);
  24:Src/graphics.c **** 
  25:Src/graphics.c ****     pString++;
  26:Src/graphics.c **** 
  27:Src/graphics.c ****     _x += Font->Width;
  28:Src/graphics.c ****   }
  29:Src/graphics.c **** }
  30:Src/graphics.c **** 
  31:Src/graphics.c **** void IPS_DrawChar_Buf(uint16_t x, uint16_t y, const char c, sFONT* Font, uint16_t Color_Background,
ARM GAS  /tmp/ccYF30DA.s 			page 2


  32:Src/graphics.c **** {
  33:Src/graphics.c ****   uint16_t Page, Column;
  34:Src/graphics.c **** 
  35:Src/graphics.c ****   if (x > IPS_WIDTH-1 || y > IPS_HEIGHT-1) return;
  36:Src/graphics.c **** 
  37:Src/graphics.c ****   uint32_t Char_Offset = (c - ' ') * Font->Height * (Font->Width / 8 + (Font->Width % 8 ? 1 : 0));
  38:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
  39:Src/graphics.c **** 
  40:Src/graphics.c ****   for (Page = 0; Page < Font->Height; Page ++ ) {
  41:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
  42:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
  43:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
  44:Src/graphics.c ****       if (Column % 8 == 7) ptr++;
  45:Src/graphics.c ****     }
  46:Src/graphics.c ****     if (Font->Width % 8 != 0) ptr++;
  47:Src/graphics.c ****   }
  48:Src/graphics.c **** }
  49:Src/graphics.c **** 
  50:Src/graphics.c **** void IPS_SetPixel_buf(uint16_t Xpoint, uint16_t Ypoint, uint16_t Color)
  51:Src/graphics.c **** {
  28              		.loc 1 51 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  52:Src/graphics.c **** 		IPS.text_buf[((((17*8))-Xpoint) + ((23 - Ypoint)*(17*8)))] = Color;
  33              		.loc 1 52 3 view .LVU1
  34              		.loc 1 52 26 is_stmt 0 view .LVU2
  35 0000 8823     		movs	r3, #136
  36 0002 1B1A     		subs	r3, r3, r0
  37              		.loc 1 52 42 view .LVU3
  38 0004 1720     		movs	r0, #23
  39              	.LVL1:
  40              		.loc 1 52 42 view .LVU4
  41 0006 411A     		subs	r1, r0, r1
  42              	.LVL2:
  43              		.loc 1 52 51 view .LVU5
  44 0008 0801     		lsls	r0, r1, #4
  45 000a 4018     		adds	r0, r0, r1
  46 000c C000     		lsls	r0, r0, #3
  47              		.loc 1 52 35 view .LVU6
  48 000e 1B18     		adds	r3, r3, r0
  49              		.loc 1 52 62 view .LVU7
  50 0010 0433     		adds	r3, r3, #4
  51 0012 5B00     		lsls	r3, r3, #1
  52 0014 0148     		ldr	r0, .L2
  53 0016 C318     		adds	r3, r0, r3
  54 0018 5A80     		strh	r2, [r3, #2]
  53:Src/graphics.c **** }
  55              		.loc 1 53 1 view .LVU8
  56              		@ sp needed
  57 001a 7047     		bx	lr
  58              	.L3:
  59              		.align	2
  60              	.L2:
  61 001c 00000000 		.word	IPS
  62              		.cfi_endproc
ARM GAS  /tmp/ccYF30DA.s 			page 3


  63              	.LFE42:
  65              		.section	.text.IPS_DrawChar_Buf,"ax",%progbits
  66              		.align	1
  67              		.global	IPS_DrawChar_Buf
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	IPS_DrawChar_Buf:
  74              	.LVL3:
  75              	.LFB41:
  32:Src/graphics.c ****   uint16_t Page, Column;
  76              		.loc 1 32 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 8, pretend = 0, frame = 8
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  32:Src/graphics.c ****   uint16_t Page, Column;
  80              		.loc 1 32 1 is_stmt 0 view .LVU10
  81 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 20
  84              		.cfi_offset 4, -20
  85              		.cfi_offset 5, -16
  86              		.cfi_offset 6, -12
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 DE46     		mov	lr, fp
  90 0004 5746     		mov	r7, r10
  91 0006 4E46     		mov	r6, r9
  92 0008 4546     		mov	r5, r8
  93 000a E0B5     		push	{r5, r6, r7, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 36
  96              		.cfi_offset 8, -36
  97              		.cfi_offset 9, -32
  98              		.cfi_offset 10, -28
  99              		.cfi_offset 11, -24
 100 000c 83B0     		sub	sp, sp, #12
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 48
 103 000e 8146     		mov	r9, r0
 104 0010 8A46     		mov	r10, r1
 105 0012 9846     		mov	r8, r3
 106 0014 0CAB     		add	r3, sp, #48
 107              	.LVL4:
  32:Src/graphics.c ****   uint16_t Page, Column;
 108              		.loc 1 32 1 view .LVU11
 109 0016 1B88     		ldrh	r3, [r3]
 110              	.LVL5:
  32:Src/graphics.c ****   uint16_t Page, Column;
 111              		.loc 1 32 1 view .LVU12
 112 0018 0193     		str	r3, [sp, #4]
 113 001a 0DAB     		add	r3, sp, #52
 114              	.LVL6:
  32:Src/graphics.c ****   uint16_t Page, Column;
 115              		.loc 1 32 1 view .LVU13
 116 001c 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccYF30DA.s 			page 4


 117              	.LVL7:
  32:Src/graphics.c ****   uint16_t Page, Column;
 118              		.loc 1 32 1 view .LVU14
 119 001e 9B46     		mov	fp, r3
  33:Src/graphics.c **** 
 120              		.loc 1 33 3 is_stmt 1 view .LVU15
  35:Src/graphics.c **** 
 121              		.loc 1 35 3 view .LVU16
  35:Src/graphics.c **** 
 122              		.loc 1 35 6 is_stmt 0 view .LVU17
 123 0020 9F28     		cmp	r0, #159
 124 0022 3ED8     		bhi	.L4
  35:Src/graphics.c **** 
 125              		.loc 1 35 23 discriminator 2 view .LVU18
 126 0024 4F29     		cmp	r1, #79
 127 0026 3CD8     		bhi	.L4
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 128              		.loc 1 37 3 is_stmt 1 view .LVU19
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 129              		.loc 1 37 29 is_stmt 0 view .LVU20
 130 0028 203A     		subs	r2, r2, #32
 131              	.LVL8:
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 132              		.loc 1 37 42 view .LVU21
 133 002a 4346     		mov	r3, r8
 134 002c DE88     		ldrh	r6, [r3, #6]
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 135              		.loc 1 37 36 view .LVU22
 136 002e 7243     		muls	r2, r6
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 137              		.loc 1 37 58 view .LVU23
 138 0030 9988     		ldrh	r1, [r3, #4]
 139              	.LVL9:
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 140              		.loc 1 37 66 view .LVU24
 141 0032 CE08     		lsrs	r6, r1, #3
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 142              		.loc 1 37 93 view .LVU25
 143 0034 0723     		movs	r3, #7
 144 0036 0B40     		ands	r3, r1
 145 0038 591E     		subs	r1, r3, #1
 146 003a 8B41     		sbcs	r3, r3, r1
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 147              		.loc 1 37 70 view .LVU26
 148 003c F618     		adds	r6, r6, r3
  37:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 149              		.loc 1 37 51 view .LVU27
 150 003e 5643     		muls	r6, r2
 151              	.LVL10:
  38:Src/graphics.c **** 
 152              		.loc 1 38 3 is_stmt 1 view .LVU28
  38:Src/graphics.c **** 
 153              		.loc 1 38 24 is_stmt 0 view .LVU29
 154 0040 4346     		mov	r3, r8
 155 0042 1B68     		ldr	r3, [r3]
 156 0044 9C46     		mov	ip, r3
 157 0046 6644     		add	r6, r6, ip
ARM GAS  /tmp/ccYF30DA.s 			page 5


 158              	.LVL11:
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 159              		.loc 1 40 3 is_stmt 1 view .LVU30
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 160              		.loc 1 40 13 is_stmt 0 view .LVU31
 161 0048 0027     		movs	r7, #0
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 162              		.loc 1 40 3 view .LVU32
 163 004a 24E0     		b	.L6
 164              	.LVL12:
 165              	.L7:
 166              	.LBB2:
  43:Src/graphics.c ****       if (Column % 8 == 7) ptr++;
 167              		.loc 1 43 12 is_stmt 1 view .LVU33
 168 004c 5346     		mov	r3, r10
 169 004e D919     		adds	r1, r3, r7
 170 0050 4B46     		mov	r3, r9
 171 0052 1819     		adds	r0, r3, r4
 172 0054 019A     		ldr	r2, [sp, #4]
 173 0056 FFF7FEFF 		bl	IPS_SetPixel_buf
 174              	.LVL13:
 175              	.L8:
 176              	.LBE2:
  44:Src/graphics.c ****     }
 177              		.loc 1 44 7 view .LVU34
  44:Src/graphics.c ****     }
 178              		.loc 1 44 10 is_stmt 0 view .LVU35
 179 005a 072D     		cmp	r5, #7
 180 005c 14D0     		beq	.L14
 181              	.L9:
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 182              		.loc 1 41 44 is_stmt 1 discriminator 2 view .LVU36
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 183              		.loc 1 41 51 is_stmt 0 discriminator 2 view .LVU37
 184 005e 0134     		adds	r4, r4, #1
 185              	.LVL14:
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 186              		.loc 1 41 51 discriminator 2 view .LVU38
 187 0060 A4B2     		uxth	r4, r4
 188              	.LVL15:
 189              	.L12:
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 190              		.loc 1 41 22 is_stmt 1 discriminator 1 view .LVU39
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 191              		.loc 1 41 35 is_stmt 0 discriminator 1 view .LVU40
 192 0062 4346     		mov	r3, r8
 193 0064 9B88     		ldrh	r3, [r3, #4]
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 194              		.loc 1 41 5 discriminator 1 view .LVU41
 195 0066 A342     		cmp	r3, r4
 196 0068 10D9     		bls	.L15
  42:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
 197              		.loc 1 42 7 is_stmt 1 view .LVU42
  42:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
 198              		.loc 1 42 11 is_stmt 0 view .LVU43
 199 006a 3278     		ldrb	r2, [r6]
 200 006c 0725     		movs	r5, #7
ARM GAS  /tmp/ccYF30DA.s 			page 6


 201 006e 2540     		ands	r5, r4
  42:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
 202              		.loc 1 42 24 view .LVU44
 203 0070 8023     		movs	r3, #128
 204 0072 2B41     		asrs	r3, r3, r5
  42:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
 205              		.loc 1 42 10 view .LVU45
 206 0074 1342     		tst	r3, r2
 207 0076 E9D0     		beq	.L7
 208              	.LBB3:
  42:Src/graphics.c ****       else IPS_SetPixel_buf(x + Column, y + Page, Color_Background);
 209              		.loc 1 42 42 is_stmt 1 discriminator 1 view .LVU46
 210 0078 5346     		mov	r3, r10
 211 007a D919     		adds	r1, r3, r7
 212 007c 4B46     		mov	r3, r9
 213 007e 1819     		adds	r0, r3, r4
 214 0080 5A46     		mov	r2, fp
 215 0082 FFF7FEFF 		bl	IPS_SetPixel_buf
 216              	.LVL16:
 217              	.LBE3:
 218 0086 E8E7     		b	.L8
 219              	.L14:
  44:Src/graphics.c ****     }
 220              		.loc 1 44 28 discriminator 1 view .LVU47
  44:Src/graphics.c ****     }
 221              		.loc 1 44 31 is_stmt 0 discriminator 1 view .LVU48
 222 0088 0136     		adds	r6, r6, #1
 223              	.LVL17:
  44:Src/graphics.c ****     }
 224              		.loc 1 44 31 discriminator 1 view .LVU49
 225 008a E8E7     		b	.L9
 226              	.L15:
  46:Src/graphics.c ****   }
 227              		.loc 1 46 5 is_stmt 1 view .LVU50
  46:Src/graphics.c ****   }
 228              		.loc 1 46 8 is_stmt 0 view .LVU51
 229 008c 5B07     		lsls	r3, r3, #29
 230 008e 00D0     		beq	.L11
  46:Src/graphics.c ****   }
 231              		.loc 1 46 31 is_stmt 1 discriminator 1 view .LVU52
  46:Src/graphics.c ****   }
 232              		.loc 1 46 34 is_stmt 0 discriminator 1 view .LVU53
 233 0090 0136     		adds	r6, r6, #1
 234              	.LVL18:
 235              	.L11:
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 236              		.loc 1 40 39 is_stmt 1 discriminator 2 view .LVU54
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 237              		.loc 1 40 44 is_stmt 0 discriminator 2 view .LVU55
 238 0092 0137     		adds	r7, r7, #1
 239              	.LVL19:
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 240              		.loc 1 40 44 discriminator 2 view .LVU56
 241 0094 BFB2     		uxth	r7, r7
 242              	.LVL20:
 243              	.L6:
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
ARM GAS  /tmp/ccYF30DA.s 			page 7


 244              		.loc 1 40 18 is_stmt 1 discriminator 1 view .LVU57
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 245              		.loc 1 40 29 is_stmt 0 discriminator 1 view .LVU58
 246 0096 4346     		mov	r3, r8
 247 0098 DB88     		ldrh	r3, [r3, #6]
  40:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 248              		.loc 1 40 3 discriminator 1 view .LVU59
 249 009a BB42     		cmp	r3, r7
 250 009c 01D9     		bls	.L4
  41:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel_buf(x + Column, y + Page, Color_Foreground);
 251              		.loc 1 41 17 view .LVU60
 252 009e 0024     		movs	r4, #0
 253 00a0 DFE7     		b	.L12
 254              	.LVL21:
 255              	.L4:
  48:Src/graphics.c **** 
 256              		.loc 1 48 1 view .LVU61
 257 00a2 03B0     		add	sp, sp, #12
 258              		@ sp needed
 259              	.LVL22:
  48:Src/graphics.c **** 
 260              		.loc 1 48 1 view .LVU62
 261 00a4 3CBC     		pop	{r2, r3, r4, r5}
 262 00a6 9046     		mov	r8, r2
 263 00a8 9946     		mov	r9, r3
 264 00aa A246     		mov	r10, r4
 265 00ac AB46     		mov	fp, r5
 266 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 267              		.cfi_endproc
 268              	.LFE41:
 270              		.section	.text.IPS_DrawString_Buf,"ax",%progbits
 271              		.align	1
 272              		.global	IPS_DrawString_Buf
 273              		.syntax unified
 274              		.code	16
 275              		.thumb_func
 276              		.fpu softvfp
 278              	IPS_DrawString_Buf:
 279              	.LVL23:
 280              	.LFB40:
   7:Src/graphics.c ****   uint16_t _x = x;
 281              		.loc 1 7 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 12, pretend = 0, frame = 8
 284              		@ frame_needed = 0, uses_anonymous_args = 0
   7:Src/graphics.c ****   uint16_t _x = x;
 285              		.loc 1 7 1 is_stmt 0 view .LVU64
 286 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 20
 289              		.cfi_offset 4, -20
 290              		.cfi_offset 5, -16
 291              		.cfi_offset 6, -12
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 DE46     		mov	lr, fp
 295 0004 5746     		mov	r7, r10
ARM GAS  /tmp/ccYF30DA.s 			page 8


 296 0006 80B5     		push	{r7, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 28
 299              		.cfi_offset 10, -28
 300              		.cfi_offset 11, -24
 301 0008 85B0     		sub	sp, sp, #20
 302              	.LCFI5:
 303              		.cfi_def_cfa_offset 48
 304 000a 0290     		str	r0, [sp, #8]
 305 000c 0391     		str	r1, [sp, #12]
 306 000e 1600     		movs	r6, r2
 307 0010 0CAB     		add	r3, sp, #48
 308              	.LVL24:
   7:Src/graphics.c ****   uint16_t _x = x;
 309              		.loc 1 7 1 view .LVU65
 310 0012 20CB     		ldmia	r3!, {r5}
 311              	.LVL25:
   7:Src/graphics.c ****   uint16_t _x = x;
 312              		.loc 1 7 1 view .LVU66
 313 0014 1B88     		ldrh	r3, [r3]
 314              	.LVL26:
   7:Src/graphics.c ****   uint16_t _x = x;
 315              		.loc 1 7 1 view .LVU67
 316 0016 9A46     		mov	r10, r3
 317 0018 0EAB     		add	r3, sp, #56
 318              	.LVL27:
   7:Src/graphics.c ****   uint16_t _x = x;
 319              		.loc 1 7 1 view .LVU68
 320 001a 1B88     		ldrh	r3, [r3]
 321              	.LVL28:
   7:Src/graphics.c ****   uint16_t _x = x;
 322              		.loc 1 7 1 view .LVU69
 323 001c 9B46     		mov	fp, r3
   8:Src/graphics.c ****   uint16_t _y = y;
 324              		.loc 1 8 3 is_stmt 1 view .LVU70
 325              	.LVL29:
   9:Src/graphics.c **** 
 326              		.loc 1 9 3 view .LVU71
  11:Src/graphics.c **** 
 327              		.loc 1 11 3 view .LVU72
  11:Src/graphics.c **** 
 328              		.loc 1 11 6 is_stmt 0 view .LVU73
 329 001e 9F28     		cmp	r0, #159
 330 0020 23D8     		bhi	.L16
  11:Src/graphics.c **** 
 331              		.loc 1 11 23 discriminator 2 view .LVU74
 332 0022 4F29     		cmp	r1, #79
 333 0024 21D8     		bhi	.L16
   9:Src/graphics.c **** 
 334              		.loc 1 9 12 view .LVU75
 335 0026 0F00     		movs	r7, r1
   8:Src/graphics.c ****   uint16_t _y = y;
 336              		.loc 1 8 12 view .LVU76
 337 0028 0400     		movs	r4, r0
 338 002a 12E0     		b	.L18
 339              	.LVL30:
 340              	.L19:
ARM GAS  /tmp/ccYF30DA.s 			page 9


 341              	.LBB4:
  18:Src/graphics.c ****       _x = x;
 342              		.loc 1 18 5 is_stmt 1 view .LVU77
  18:Src/graphics.c ****       _x = x;
 343              		.loc 1 18 20 is_stmt 0 view .LVU78
 344 002c EB88     		ldrh	r3, [r5, #6]
  18:Src/graphics.c ****       _x = x;
 345              		.loc 1 18 14 view .LVU79
 346 002e FB18     		adds	r3, r7, r3
  18:Src/graphics.c ****       _x = x;
 347              		.loc 1 18 8 view .LVU80
 348 0030 4F2B     		cmp	r3, #79
 349 0032 01DD     		ble	.L20
  20:Src/graphics.c ****     }
 350              		.loc 1 20 10 view .LVU81
 351 0034 039F     		ldr	r7, [sp, #12]
 352              	.LVL31:
  19:Src/graphics.c ****       _y = y;
 353              		.loc 1 19 10 view .LVU82
 354 0036 029C     		ldr	r4, [sp, #8]
 355              	.LVL32:
 356              	.L20:
  23:Src/graphics.c **** 
 357              		.loc 1 23 5 is_stmt 1 view .LVU83
 358 0038 5B46     		mov	r3, fp
 359 003a 0193     		str	r3, [sp, #4]
 360 003c 5346     		mov	r3, r10
 361 003e 0093     		str	r3, [sp]
 362 0040 2B00     		movs	r3, r5
 363 0042 3900     		movs	r1, r7
 364 0044 2000     		movs	r0, r4
 365 0046 FFF7FEFF 		bl	IPS_DrawChar_Buf
 366              	.LVL33:
  25:Src/graphics.c **** 
 367              		.loc 1 25 5 view .LVU84
  25:Src/graphics.c **** 
 368              		.loc 1 25 12 is_stmt 0 view .LVU85
 369 004a 0136     		adds	r6, r6, #1
 370              	.LVL34:
  27:Src/graphics.c ****   }
 371              		.loc 1 27 5 is_stmt 1 view .LVU86
  27:Src/graphics.c ****   }
 372              		.loc 1 27 15 is_stmt 0 view .LVU87
 373 004c AB88     		ldrh	r3, [r5, #4]
  27:Src/graphics.c ****   }
 374              		.loc 1 27 8 view .LVU88
 375 004e 1C19     		adds	r4, r3, r4
 376              	.LVL35:
  27:Src/graphics.c ****   }
 377              		.loc 1 27 8 view .LVU89
 378 0050 A4B2     		uxth	r4, r4
 379              	.LVL36:
 380              	.L18:
  27:Src/graphics.c ****   }
 381              		.loc 1 27 8 view .LVU90
 382              	.LBE4:
  13:Src/graphics.c ****     if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
ARM GAS  /tmp/ccYF30DA.s 			page 10


 383              		.loc 1 13 9 is_stmt 1 view .LVU91
  13:Src/graphics.c ****     if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
 384              		.loc 1 13 10 is_stmt 0 view .LVU92
 385 0052 3278     		ldrb	r2, [r6]
  13:Src/graphics.c ****     if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
 386              		.loc 1 13 9 view .LVU93
 387 0054 002A     		cmp	r2, #0
 388 0056 08D0     		beq	.L16
 389              	.LBB5:
  14:Src/graphics.c ****       _x = x;
 390              		.loc 1 14 5 is_stmt 1 view .LVU94
  14:Src/graphics.c ****       _x = x;
 391              		.loc 1 14 19 is_stmt 0 view .LVU95
 392 0058 AB88     		ldrh	r3, [r5, #4]
  14:Src/graphics.c ****       _x = x;
 393              		.loc 1 14 13 view .LVU96
 394 005a E318     		adds	r3, r4, r3
  14:Src/graphics.c ****       _x = x;
 395              		.loc 1 14 8 view .LVU97
 396 005c 9F2B     		cmp	r3, #159
 397 005e E5DD     		ble	.L19
  15:Src/graphics.c ****       _y += Font->Height;
 398              		.loc 1 15 7 is_stmt 1 view .LVU98
 399              	.LVL37:
  16:Src/graphics.c ****     }
 400              		.loc 1 16 7 view .LVU99
  16:Src/graphics.c ****     }
 401              		.loc 1 16 17 is_stmt 0 view .LVU100
 402 0060 EB88     		ldrh	r3, [r5, #6]
  16:Src/graphics.c ****     }
 403              		.loc 1 16 10 view .LVU101
 404 0062 DF19     		adds	r7, r3, r7
 405              	.LVL38:
  16:Src/graphics.c ****     }
 406              		.loc 1 16 10 view .LVU102
 407 0064 BFB2     		uxth	r7, r7
 408              	.LVL39:
  15:Src/graphics.c ****       _y += Font->Height;
 409              		.loc 1 15 10 view .LVU103
 410 0066 029C     		ldr	r4, [sp, #8]
 411 0068 E0E7     		b	.L19
 412              	.LVL40:
 413              	.L16:
  15:Src/graphics.c ****       _y += Font->Height;
 414              		.loc 1 15 10 view .LVU104
 415              	.LBE5:
  29:Src/graphics.c **** 
 416              		.loc 1 29 1 view .LVU105
 417 006a 05B0     		add	sp, sp, #20
 418              		@ sp needed
 419              	.LVL41:
  29:Src/graphics.c **** 
 420              		.loc 1 29 1 view .LVU106
 421 006c 0CBC     		pop	{r2, r3}
 422 006e 9246     		mov	r10, r2
 423 0070 9B46     		mov	fp, r3
 424 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccYF30DA.s 			page 11


 425              		.cfi_endproc
 426              	.LFE40:
 428              		.section	.text.IPS_DrawString_R,"ax",%progbits
 429              		.align	1
 430              		.global	IPS_DrawString_R
 431              		.syntax unified
 432              		.code	16
 433              		.thumb_func
 434              		.fpu softvfp
 436              	IPS_DrawString_R:
 437              	.LVL42:
 438              	.LFB44:
  54:Src/graphics.c **** 
  55:Src/graphics.c **** void IPS_WriteBuf(uint16_t x, uint16_t y)
  56:Src/graphics.c **** {
  57:Src/graphics.c **** 	IPS_SetCursor(x,y,x+(17*8)-1,y+24-1);
  58:Src/graphics.c ****   HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin, 0);
  59:Src/graphics.c ****   HAL_GPIO_WritePin(IPS_DC_GPIO_Port, IPS_DC_Pin, 1);
  60:Src/graphics.c **** 	HAL_SPI_Transmit_DMA(&hspi1, (uint16_t *)&IPS.text_buf, ((24*(17*8))*2)-1);
  61:Src/graphics.c **** }
  62:Src/graphics.c **** 
  63:Src/graphics.c **** void IPS_DrawString_R(uint16_t x, uint16_t y, const char * pString, uint8_t len, sFONT* Font, uint1
  64:Src/graphics.c **** {
 439              		.loc 1 64 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 12, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
  65:Src/graphics.c ****   x -= (Font->Width*len);
 444              		.loc 1 65 3 view .LVU108
  66:Src/graphics.c **** 
  67:Src/graphics.c **** }
 445              		.loc 1 67 1 is_stmt 0 view .LVU109
 446              		@ sp needed
 447 0000 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE44:
 451              		.section	.text.IPS_Reset,"ax",%progbits
 452              		.align	1
 453              		.global	IPS_Reset
 454              		.syntax unified
 455              		.code	16
 456              		.thumb_func
 457              		.fpu softvfp
 459              	IPS_Reset:
 460              	.LFB51:
  68:Src/graphics.c **** 
  69:Src/graphics.c **** void IPS_DrawString(uint16_t x, uint16_t y, const char * pString, sFONT* Font, uint16_t Color_Backg
  70:Src/graphics.c **** {
  71:Src/graphics.c ****   uint16_t _x = x;
  72:Src/graphics.c ****   uint16_t _y = y;
  73:Src/graphics.c **** 
  74:Src/graphics.c ****   if (x > IPS_WIDTH-1 || y > IPS_HEIGHT-1) return;
  75:Src/graphics.c **** 
  76:Src/graphics.c ****   while (* pString != '\0') {
  77:Src/graphics.c ****   if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
  78:Src/graphics.c ****   _x = x;
ARM GAS  /tmp/ccYF30DA.s 			page 12


  79:Src/graphics.c ****   _y += Font->Height;
  80:Src/graphics.c ****   }
  81:Src/graphics.c **** 
  82:Src/graphics.c ****   if ((_y  + Font->Height ) > IPS_HEIGHT-1 ) {
  83:Src/graphics.c ****   _x = x;
  84:Src/graphics.c ****   _y = y;
  85:Src/graphics.c ****   }
  86:Src/graphics.c **** 
  87:Src/graphics.c ****   IPS_DrawChar(_x, _y, * pString, Font, Color_Background, Color_Foreground);
  88:Src/graphics.c **** 
  89:Src/graphics.c ****   pString ++;
  90:Src/graphics.c **** 
  91:Src/graphics.c ****   _x += Font->Width;
  92:Src/graphics.c ****   }
  93:Src/graphics.c **** }
  94:Src/graphics.c **** 
  95:Src/graphics.c **** void IPS_DrawChar(uint16_t x, uint16_t y, const char c, sFONT* Font, uint16_t Color_Background, uin
  96:Src/graphics.c **** {
  97:Src/graphics.c ****   uint16_t Page, Column;
  98:Src/graphics.c **** 
  99:Src/graphics.c ****   if (x > IPS_WIDTH-1 || y > IPS_HEIGHT-1) return;
 100:Src/graphics.c **** 
 101:Src/graphics.c ****   uint32_t Char_Offset = (c - ' ') * Font->Height * (Font->Width / 8 + (Font->Width % 8 ? 1 : 0));
 102:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 103:Src/graphics.c **** 
 104:Src/graphics.c ****   for (Page = 0; Page < Font->Height; Page ++ ) {
 105:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 106:Src/graphics.c **** 
 107:Src/graphics.c ****     if (FONT_BACKGROUND == Color_Background) {
 108:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel(x + Column, y + Page, Color_Foreground);
 109:Src/graphics.c ****     } else {
 110:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel(x + Column, y + Page, Color_Foreground);
 111:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 112:Src/graphics.c ****       }
 113:Src/graphics.c ****     if (Column % 8 == 7) ptr++;
 114:Src/graphics.c ****     }
 115:Src/graphics.c ****     if (Font->Width % 8 != 0) ptr++;
 116:Src/graphics.c ****   }
 117:Src/graphics.c **** }
 118:Src/graphics.c **** 
 119:Src/graphics.c **** void IPS_SetPixel(uint16_t Xpoint, uint16_t Ypoint, uint16_t Color)
 120:Src/graphics.c **** {
 121:Src/graphics.c ****   if(Xpoint > IPS_WIDTH-1 || Ypoint > IPS_HEIGHT-1) return;
 122:Src/graphics.c ****   IPS_SetUWORD((IPS_WIDTH-1 - Xpoint - 1), (IPS_HEIGHT-1 - Ypoint - 1), Color);
 123:Src/graphics.c **** }
 124:Src/graphics.c **** 
 125:Src/graphics.c **** void IPS_SetUWORD(uint16_t x, uint16_t y, uint16_t Color)
 126:Src/graphics.c **** {
 127:Src/graphics.c **** 	IPS_SetCursor(x,y,x,y);
 128:Src/graphics.c **** 	IPS_WriteData_Word(Color);
 129:Src/graphics.c **** }
 130:Src/graphics.c **** 
 131:Src/graphics.c **** void IPS_SetCursor(uint16_t Xstart, uint16_t Ystart, uint16_t Xend, uint16_t  Yend)
 132:Src/graphics.c **** {
 133:Src/graphics.c **** 	Xstart = Xstart + 1;
 134:Src/graphics.c **** 	Xend = Xend + 1;
 135:Src/graphics.c **** 	Ystart = Ystart + 26;
ARM GAS  /tmp/ccYF30DA.s 			page 13


 136:Src/graphics.c **** 	Yend = Yend+26;
 137:Src/graphics.c **** 	IPS_WriteReg(0x2a);
 138:Src/graphics.c **** 	IPS_WriteData_Byte(Xstart>>8);
 139:Src/graphics.c **** 	IPS_WriteData_Byte(Xstart);
 140:Src/graphics.c **** 	IPS_WriteData_Byte(Xend >>8);
 141:Src/graphics.c **** 	IPS_WriteData_Byte(Xend );
 142:Src/graphics.c **** 
 143:Src/graphics.c **** 	IPS_WriteReg(0x2b);
 144:Src/graphics.c **** 	IPS_WriteData_Byte(Ystart>>8);
 145:Src/graphics.c **** 	IPS_WriteData_Byte(Ystart);
 146:Src/graphics.c **** 	IPS_WriteData_Byte(Yend>>8);
 147:Src/graphics.c **** 	IPS_WriteData_Byte(Yend);
 148:Src/graphics.c **** 
 149:Src/graphics.c **** 	IPS_WriteReg(0x2C);
 150:Src/graphics.c **** }
 151:Src/graphics.c **** 
 152:Src/graphics.c **** void IPS_Clear(uint16_t Color)
 153:Src/graphics.c **** {
 154:Src/graphics.c ****   IPS_SetCursor(0, 0, IPS_WIDTH-1, IPS_HEIGHT-1);
 155:Src/graphics.c ****   for(uint16_t i = 0; i < IPS_WIDTH; i++){
 156:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 157:Src/graphics.c ****       IPS_WriteData_Word(Color);
 158:Src/graphics.c ****     }
 159:Src/graphics.c ****   }
 160:Src/graphics.c **** }
 161:Src/graphics.c **** 
 162:Src/graphics.c **** void IPS_Reset(void)
 163:Src/graphics.c **** {
 461              		.loc 1 163 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 70B5     		push	{r4, r5, r6, lr}
 466              	.LCFI6:
 467              		.cfi_def_cfa_offset 16
 468              		.cfi_offset 4, -16
 469              		.cfi_offset 5, -12
 470              		.cfi_offset 6, -8
 471              		.cfi_offset 14, -4
 164:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin,0);
 472              		.loc 1 164 2 view .LVU111
 473 0002 0022     		movs	r2, #0
 474 0004 8021     		movs	r1, #128
 475 0006 0D48     		ldr	r0, .L25
 476 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 477              	.LVL43:
 165:Src/graphics.c **** 	HAL_Delay(20);
 478              		.loc 1 165 2 view .LVU112
 479 000c 1420     		movs	r0, #20
 480 000e FFF7FEFF 		bl	HAL_Delay
 481              	.LVL44:
 166:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_RESET_GPIO_Port, IPS_RESET_Pin,0);
 482              		.loc 1 166 2 view .LVU113
 483 0012 8025     		movs	r5, #128
 484 0014 2D02     		lsls	r5, r5, #8
 485 0016 9024     		movs	r4, #144
 486 0018 E405     		lsls	r4, r4, #23
ARM GAS  /tmp/ccYF30DA.s 			page 14


 487 001a 0022     		movs	r2, #0
 488 001c 2900     		movs	r1, r5
 489 001e 2000     		movs	r0, r4
 490 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 491              	.LVL45:
 167:Src/graphics.c **** 	HAL_Delay(20);
 492              		.loc 1 167 2 view .LVU114
 493 0024 1420     		movs	r0, #20
 494 0026 FFF7FEFF 		bl	HAL_Delay
 495              	.LVL46:
 168:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_RESET_GPIO_Port, IPS_RESET_Pin,1);
 496              		.loc 1 168 2 view .LVU115
 497 002a 0122     		movs	r2, #1
 498 002c 2900     		movs	r1, r5
 499 002e 2000     		movs	r0, r4
 500 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 501              	.LVL47:
 169:Src/graphics.c **** 	HAL_Delay(20);
 502              		.loc 1 169 2 view .LVU116
 503 0034 1420     		movs	r0, #20
 504 0036 FFF7FEFF 		bl	HAL_Delay
 505              	.LVL48:
 170:Src/graphics.c **** }
 506              		.loc 1 170 1 is_stmt 0 view .LVU117
 507              		@ sp needed
 508 003a 70BD     		pop	{r4, r5, r6, pc}
 509              	.L26:
 510              		.align	2
 511              	.L25:
 512 003c 00040048 		.word	1207960576
 513              		.cfi_endproc
 514              	.LFE51:
 516              		.section	.text.IPS_WriteData_Byte,"ax",%progbits
 517              		.align	1
 518              		.global	IPS_WriteData_Byte
 519              		.syntax unified
 520              		.code	16
 521              		.thumb_func
 522              		.fpu softvfp
 524              	IPS_WriteData_Byte:
 525              	.LVL49:
 526              	.LFB52:
 171:Src/graphics.c **** 
 172:Src/graphics.c **** void IPS_WriteData_Byte(uint8_t data)
 173:Src/graphics.c **** {
 527              		.loc 1 173 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 8
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		.loc 1 173 1 is_stmt 0 view .LVU119
 532 0000 30B5     		push	{r4, r5, lr}
 533              	.LCFI7:
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccYF30DA.s 			page 15


 539              	.LCFI8:
 540              		.cfi_def_cfa_offset 24
 541 0004 6B46     		mov	r3, sp
 542 0006 DC1D     		adds	r4, r3, #7
 543 0008 D871     		strb	r0, [r3, #7]
 174:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin, 0);
 544              		.loc 1 174 2 is_stmt 1 view .LVU120
 545 000a 094D     		ldr	r5, .L28
 546 000c 0022     		movs	r2, #0
 547 000e 8021     		movs	r1, #128
 548 0010 2800     		movs	r0, r5
 549              	.LVL50:
 550              		.loc 1 174 2 is_stmt 0 view .LVU121
 551 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 552              	.LVL51:
 175:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_DC_GPIO_Port, IPS_DC_Pin, 1);
 553              		.loc 1 175 2 is_stmt 1 view .LVU122
 554 0016 0122     		movs	r2, #1
 555 0018 4021     		movs	r1, #64
 556 001a 2800     		movs	r0, r5
 557 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL52:
 176:Src/graphics.c **** 	HAL_SPI_Transmit_DMA(&hspi1, (uint8_t *)&data, 1);
 559              		.loc 1 176 2 view .LVU123
 560 0020 0122     		movs	r2, #1
 561 0022 2100     		movs	r1, r4
 562 0024 0348     		ldr	r0, .L28+4
 563 0026 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 564              	.LVL53:
 177:Src/graphics.c **** }
 565              		.loc 1 177 1 is_stmt 0 view .LVU124
 566 002a 03B0     		add	sp, sp, #12
 567              		@ sp needed
 568 002c 30BD     		pop	{r4, r5, pc}
 569              	.L29:
 570 002e C046     		.align	2
 571              	.L28:
 572 0030 00040048 		.word	1207960576
 573 0034 00000000 		.word	hspi1
 574              		.cfi_endproc
 575              	.LFE52:
 577              		.section	.text.IPS_WriteData_Word,"ax",%progbits
 578              		.align	1
 579              		.global	IPS_WriteData_Word
 580              		.syntax unified
 581              		.code	16
 582              		.thumb_func
 583              		.fpu softvfp
 585              	IPS_WriteData_Word:
 586              	.LVL54:
 587              	.LFB53:
 178:Src/graphics.c **** 
 179:Src/graphics.c ****  void IPS_WriteData_Word(uint16_t data)
 180:Src/graphics.c **** {
 588              		.loc 1 180 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccYF30DA.s 			page 16


 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		.loc 1 180 1 is_stmt 0 view .LVU126
 593 0000 30B5     		push	{r4, r5, lr}
 594              	.LCFI9:
 595              		.cfi_def_cfa_offset 12
 596              		.cfi_offset 4, -12
 597              		.cfi_offset 5, -8
 598              		.cfi_offset 14, -4
 599 0002 83B0     		sub	sp, sp, #12
 600              	.LCFI10:
 601              		.cfi_def_cfa_offset 24
 602 0004 6B46     		mov	r3, sp
 603 0006 9C1D     		adds	r4, r3, #6
 604 0008 D880     		strh	r0, [r3, #6]
 181:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin, 0);
 605              		.loc 1 181 2 is_stmt 1 view .LVU127
 606 000a 094D     		ldr	r5, .L31
 607 000c 0022     		movs	r2, #0
 608 000e 8021     		movs	r1, #128
 609 0010 2800     		movs	r0, r5
 610              	.LVL55:
 611              		.loc 1 181 2 is_stmt 0 view .LVU128
 612 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 613              	.LVL56:
 182:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_DC_GPIO_Port, IPS_DC_Pin, 1);
 614              		.loc 1 182 2 is_stmt 1 view .LVU129
 615 0016 0122     		movs	r2, #1
 616 0018 4021     		movs	r1, #64
 617 001a 2800     		movs	r0, r5
 618 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 619              	.LVL57:
 183:Src/graphics.c **** 	HAL_SPI_Transmit_DMA(&hspi1, (uint16_t *)&data, 2);
 620              		.loc 1 183 2 view .LVU130
 621 0020 0222     		movs	r2, #2
 622 0022 2100     		movs	r1, r4
 623 0024 0348     		ldr	r0, .L31+4
 624 0026 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 625              	.LVL58:
 184:Src/graphics.c **** }
 626              		.loc 1 184 1 is_stmt 0 view .LVU131
 627 002a 03B0     		add	sp, sp, #12
 628              		@ sp needed
 629 002c 30BD     		pop	{r4, r5, pc}
 630              	.L32:
 631 002e C046     		.align	2
 632              	.L31:
 633 0030 00040048 		.word	1207960576
 634 0034 00000000 		.word	hspi1
 635              		.cfi_endproc
 636              	.LFE53:
 638              		.section	.text.IPS_WriteReg,"ax",%progbits
 639              		.align	1
 640              		.global	IPS_WriteReg
 641              		.syntax unified
 642              		.code	16
 643              		.thumb_func
 644              		.fpu softvfp
ARM GAS  /tmp/ccYF30DA.s 			page 17


 646              	IPS_WriteReg:
 647              	.LVL59:
 648              	.LFB54:
 185:Src/graphics.c **** 
 186:Src/graphics.c **** void IPS_WriteReg(uint8_t data)
 187:Src/graphics.c **** {
 649              		.loc 1 187 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 187 1 is_stmt 0 view .LVU133
 654 0000 30B5     		push	{r4, r5, lr}
 655              	.LCFI11:
 656              		.cfi_def_cfa_offset 12
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 5, -8
 659              		.cfi_offset 14, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              	.LCFI12:
 662              		.cfi_def_cfa_offset 24
 663 0004 6B46     		mov	r3, sp
 664 0006 DC1D     		adds	r4, r3, #7
 665 0008 D871     		strb	r0, [r3, #7]
 188:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin, 0);
 666              		.loc 1 188 2 is_stmt 1 view .LVU134
 667 000a 094D     		ldr	r5, .L34
 668 000c 0022     		movs	r2, #0
 669 000e 8021     		movs	r1, #128
 670 0010 2800     		movs	r0, r5
 671              	.LVL60:
 672              		.loc 1 188 2 is_stmt 0 view .LVU135
 673 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 674              	.LVL61:
 189:Src/graphics.c **** 	HAL_GPIO_WritePin(IPS_DC_GPIO_Port, IPS_DC_Pin, 0);
 675              		.loc 1 189 2 is_stmt 1 view .LVU136
 676 0016 0022     		movs	r2, #0
 677 0018 4021     		movs	r1, #64
 678 001a 2800     		movs	r0, r5
 679 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 680              	.LVL62:
 190:Src/graphics.c **** 	HAL_SPI_Transmit_DMA(&hspi1, (uint8_t *)&data, 1);
 681              		.loc 1 190 2 view .LVU137
 682 0020 0122     		movs	r2, #1
 683 0022 2100     		movs	r1, r4
 684 0024 0348     		ldr	r0, .L34+4
 685 0026 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 686              	.LVL63:
 191:Src/graphics.c **** }
 687              		.loc 1 191 1 is_stmt 0 view .LVU138
 688 002a 03B0     		add	sp, sp, #12
 689              		@ sp needed
 690 002c 30BD     		pop	{r4, r5, pc}
 691              	.L35:
 692 002e C046     		.align	2
 693              	.L34:
 694 0030 00040048 		.word	1207960576
 695 0034 00000000 		.word	hspi1
ARM GAS  /tmp/ccYF30DA.s 			page 18


 696              		.cfi_endproc
 697              	.LFE54:
 699              		.section	.text.IPS_SetCursor,"ax",%progbits
 700              		.align	1
 701              		.global	IPS_SetCursor
 702              		.syntax unified
 703              		.code	16
 704              		.thumb_func
 705              		.fpu softvfp
 707              	IPS_SetCursor:
 708              	.LVL64:
 709              	.LFB49:
 132:Src/graphics.c **** 	Xstart = Xstart + 1;
 710              		.loc 1 132 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 132:Src/graphics.c **** 	Xstart = Xstart + 1;
 714              		.loc 1 132 1 is_stmt 0 view .LVU140
 715 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 716              	.LCFI13:
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 3, -24
 719              		.cfi_offset 4, -20
 720              		.cfi_offset 5, -16
 721              		.cfi_offset 6, -12
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 133:Src/graphics.c **** 	Xend = Xend + 1;
 724              		.loc 1 133 2 is_stmt 1 view .LVU141
 133:Src/graphics.c **** 	Xend = Xend + 1;
 725              		.loc 1 133 9 is_stmt 0 view .LVU142
 726 0002 0130     		adds	r0, r0, #1
 727              	.LVL65:
 133:Src/graphics.c **** 	Xend = Xend + 1;
 728              		.loc 1 133 9 view .LVU143
 729 0004 87B2     		uxth	r7, r0
 730              	.LVL66:
 134:Src/graphics.c **** 	Ystart = Ystart + 26;
 731              		.loc 1 134 2 is_stmt 1 view .LVU144
 134:Src/graphics.c **** 	Ystart = Ystart + 26;
 732              		.loc 1 134 7 is_stmt 0 view .LVU145
 733 0006 0132     		adds	r2, r2, #1
 734              	.LVL67:
 134:Src/graphics.c **** 	Ystart = Ystart + 26;
 735              		.loc 1 134 7 view .LVU146
 736 0008 96B2     		uxth	r6, r2
 737              	.LVL68:
 135:Src/graphics.c **** 	Yend = Yend+26;
 738              		.loc 1 135 2 is_stmt 1 view .LVU147
 135:Src/graphics.c **** 	Yend = Yend+26;
 739              		.loc 1 135 9 is_stmt 0 view .LVU148
 740 000a 1A31     		adds	r1, r1, #26
 741              	.LVL69:
 135:Src/graphics.c **** 	Yend = Yend+26;
 742              		.loc 1 135 9 view .LVU149
 743 000c 8DB2     		uxth	r5, r1
ARM GAS  /tmp/ccYF30DA.s 			page 19


 744              	.LVL70:
 136:Src/graphics.c **** 	IPS_WriteReg(0x2a);
 745              		.loc 1 136 2 is_stmt 1 view .LVU150
 136:Src/graphics.c **** 	IPS_WriteReg(0x2a);
 746              		.loc 1 136 7 is_stmt 0 view .LVU151
 747 000e 1A33     		adds	r3, r3, #26
 748              	.LVL71:
 136:Src/graphics.c **** 	IPS_WriteReg(0x2a);
 749              		.loc 1 136 7 view .LVU152
 750 0010 9CB2     		uxth	r4, r3
 751              	.LVL72:
 137:Src/graphics.c **** 	IPS_WriteData_Byte(Xstart>>8);
 752              		.loc 1 137 2 is_stmt 1 view .LVU153
 753 0012 2A20     		movs	r0, #42
 754 0014 FFF7FEFF 		bl	IPS_WriteReg
 755              	.LVL73:
 138:Src/graphics.c **** 	IPS_WriteData_Byte(Xstart);
 756              		.loc 1 138 2 view .LVU154
 757 0018 380A     		lsrs	r0, r7, #8
 758 001a FFF7FEFF 		bl	IPS_WriteData_Byte
 759              	.LVL74:
 139:Src/graphics.c **** 	IPS_WriteData_Byte(Xend >>8);
 760              		.loc 1 139 2 view .LVU155
 761 001e F8B2     		uxtb	r0, r7
 762 0020 FFF7FEFF 		bl	IPS_WriteData_Byte
 763              	.LVL75:
 140:Src/graphics.c **** 	IPS_WriteData_Byte(Xend );
 764              		.loc 1 140 2 view .LVU156
 765 0024 300A     		lsrs	r0, r6, #8
 766 0026 FFF7FEFF 		bl	IPS_WriteData_Byte
 767              	.LVL76:
 141:Src/graphics.c **** 
 768              		.loc 1 141 2 view .LVU157
 769 002a F0B2     		uxtb	r0, r6
 770 002c FFF7FEFF 		bl	IPS_WriteData_Byte
 771              	.LVL77:
 143:Src/graphics.c **** 	IPS_WriteData_Byte(Ystart>>8);
 772              		.loc 1 143 2 view .LVU158
 773 0030 2B20     		movs	r0, #43
 774 0032 FFF7FEFF 		bl	IPS_WriteReg
 775              	.LVL78:
 144:Src/graphics.c **** 	IPS_WriteData_Byte(Ystart);
 776              		.loc 1 144 2 view .LVU159
 777 0036 280A     		lsrs	r0, r5, #8
 778 0038 FFF7FEFF 		bl	IPS_WriteData_Byte
 779              	.LVL79:
 145:Src/graphics.c **** 	IPS_WriteData_Byte(Yend>>8);
 780              		.loc 1 145 2 view .LVU160
 781 003c E8B2     		uxtb	r0, r5
 782 003e FFF7FEFF 		bl	IPS_WriteData_Byte
 783              	.LVL80:
 146:Src/graphics.c **** 	IPS_WriteData_Byte(Yend);
 784              		.loc 1 146 2 view .LVU161
 785 0042 200A     		lsrs	r0, r4, #8
 786 0044 FFF7FEFF 		bl	IPS_WriteData_Byte
 787              	.LVL81:
 147:Src/graphics.c **** 
ARM GAS  /tmp/ccYF30DA.s 			page 20


 788              		.loc 1 147 2 view .LVU162
 789 0048 E0B2     		uxtb	r0, r4
 790 004a FFF7FEFF 		bl	IPS_WriteData_Byte
 791              	.LVL82:
 149:Src/graphics.c **** }
 792              		.loc 1 149 2 view .LVU163
 793 004e 2C20     		movs	r0, #44
 794 0050 FFF7FEFF 		bl	IPS_WriteReg
 795              	.LVL83:
 150:Src/graphics.c **** 
 796              		.loc 1 150 1 is_stmt 0 view .LVU164
 797              		@ sp needed
 798              	.LVL84:
 799              	.LVL85:
 800              	.LVL86:
 801              	.LVL87:
 150:Src/graphics.c **** 
 802              		.loc 1 150 1 view .LVU165
 803 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 804              		.cfi_endproc
 805              	.LFE49:
 807              		.section	.text.IPS_WriteBuf,"ax",%progbits
 808              		.align	1
 809              		.global	IPS_WriteBuf
 810              		.syntax unified
 811              		.code	16
 812              		.thumb_func
 813              		.fpu softvfp
 815              	IPS_WriteBuf:
 816              	.LVL88:
 817              	.LFB43:
  56:Src/graphics.c **** 	IPS_SetCursor(x,y,x+(17*8)-1,y+24-1);
 818              		.loc 1 56 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
  56:Src/graphics.c **** 	IPS_SetCursor(x,y,x+(17*8)-1,y+24-1);
 822              		.loc 1 56 1 is_stmt 0 view .LVU167
 823 0000 10B5     		push	{r4, lr}
 824              	.LCFI14:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
  57:Src/graphics.c ****   HAL_GPIO_WritePin(IPS_CS_GPIO_Port, IPS_CS_Pin, 0);
 828              		.loc 1 57 2 is_stmt 1 view .LVU168
 829 0002 0B00     		movs	r3, r1
 830 0004 1733     		adds	r3, r3, #23
 831 0006 9BB2     		uxth	r3, r3
 832 0008 0200     		movs	r2, r0
 833 000a 8732     		adds	r2, r2, #135
 834 000c 92B2     		uxth	r2, r2
 835 000e FFF7FEFF 		bl	IPS_SetCursor
 836              	.LVL89:
  58:Src/graphics.c ****   HAL_GPIO_WritePin(IPS_DC_GPIO_Port, IPS_DC_Pin, 1);
 837              		.loc 1 58 3 view .LVU169
 838 0012 084C     		ldr	r4, .L38
 839 0014 0022     		movs	r2, #0
ARM GAS  /tmp/ccYF30DA.s 			page 21


 840 0016 8021     		movs	r1, #128
 841 0018 2000     		movs	r0, r4
 842 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 843              	.LVL90:
  59:Src/graphics.c **** 	HAL_SPI_Transmit_DMA(&hspi1, (uint16_t *)&IPS.text_buf, ((24*(17*8))*2)-1);
 844              		.loc 1 59 3 view .LVU170
 845 001e 0122     		movs	r2, #1
 846 0020 4021     		movs	r1, #64
 847 0022 2000     		movs	r0, r4
 848 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 849              	.LVL91:
  60:Src/graphics.c **** }
 850              		.loc 1 60 2 view .LVU171
 851 0028 034A     		ldr	r2, .L38+4
 852 002a 0449     		ldr	r1, .L38+8
 853 002c 0448     		ldr	r0, .L38+12
 854 002e FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 855              	.LVL92:
  61:Src/graphics.c **** 
 856              		.loc 1 61 1 is_stmt 0 view .LVU172
 857              		@ sp needed
 858 0032 10BD     		pop	{r4, pc}
 859              	.L39:
 860              		.align	2
 861              	.L38:
 862 0034 00040048 		.word	1207960576
 863 0038 7F190000 		.word	6527
 864 003c 0A000000 		.word	IPS+10
 865 0040 00000000 		.word	hspi1
 866              		.cfi_endproc
 867              	.LFE43:
 869              		.section	.text.IPS_SetUWORD,"ax",%progbits
 870              		.align	1
 871              		.global	IPS_SetUWORD
 872              		.syntax unified
 873              		.code	16
 874              		.thumb_func
 875              		.fpu softvfp
 877              	IPS_SetUWORD:
 878              	.LVL93:
 879              	.LFB48:
 126:Src/graphics.c **** 	IPS_SetCursor(x,y,x,y);
 880              		.loc 1 126 1 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 126:Src/graphics.c **** 	IPS_SetCursor(x,y,x,y);
 884              		.loc 1 126 1 is_stmt 0 view .LVU174
 885 0000 10B5     		push	{r4, lr}
 886              	.LCFI15:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 4, -8
 889              		.cfi_offset 14, -4
 890 0002 1400     		movs	r4, r2
 127:Src/graphics.c **** 	IPS_WriteData_Word(Color);
 891              		.loc 1 127 2 is_stmt 1 view .LVU175
 892 0004 0B00     		movs	r3, r1
ARM GAS  /tmp/ccYF30DA.s 			page 22


 893 0006 0200     		movs	r2, r0
 894              	.LVL94:
 127:Src/graphics.c **** 	IPS_WriteData_Word(Color);
 895              		.loc 1 127 2 is_stmt 0 view .LVU176
 896 0008 FFF7FEFF 		bl	IPS_SetCursor
 897              	.LVL95:
 128:Src/graphics.c **** }
 898              		.loc 1 128 2 is_stmt 1 view .LVU177
 899 000c 2000     		movs	r0, r4
 900 000e FFF7FEFF 		bl	IPS_WriteData_Word
 901              	.LVL96:
 129:Src/graphics.c **** 
 902              		.loc 1 129 1 is_stmt 0 view .LVU178
 903              		@ sp needed
 904 0012 10BD     		pop	{r4, pc}
 905              		.cfi_endproc
 906              	.LFE48:
 908              		.section	.text.IPS_SetPixel,"ax",%progbits
 909              		.align	1
 910              		.global	IPS_SetPixel
 911              		.syntax unified
 912              		.code	16
 913              		.thumb_func
 914              		.fpu softvfp
 916              	IPS_SetPixel:
 917              	.LVL97:
 918              	.LFB47:
 120:Src/graphics.c ****   if(Xpoint > IPS_WIDTH-1 || Ypoint > IPS_HEIGHT-1) return;
 919              		.loc 1 120 1 is_stmt 1 view -0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Src/graphics.c ****   if(Xpoint > IPS_WIDTH-1 || Ypoint > IPS_HEIGHT-1) return;
 923              		.loc 1 120 1 is_stmt 0 view .LVU180
 924 0000 10B5     		push	{r4, lr}
 925              	.LCFI16:
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 4, -8
 928              		.cfi_offset 14, -4
 121:Src/graphics.c ****   IPS_SetUWORD((IPS_WIDTH-1 - Xpoint - 1), (IPS_HEIGHT-1 - Ypoint - 1), Color);
 929              		.loc 1 121 3 is_stmt 1 view .LVU181
 121:Src/graphics.c ****   IPS_SetUWORD((IPS_WIDTH-1 - Xpoint - 1), (IPS_HEIGHT-1 - Ypoint - 1), Color);
 930              		.loc 1 121 5 is_stmt 0 view .LVU182
 931 0002 9F28     		cmp	r0, #159
 932 0004 01D8     		bhi	.L41
 121:Src/graphics.c ****   IPS_SetUWORD((IPS_WIDTH-1 - Xpoint - 1), (IPS_HEIGHT-1 - Ypoint - 1), Color);
 933              		.loc 1 121 27 discriminator 2 view .LVU183
 934 0006 4F29     		cmp	r1, #79
 935 0008 00D9     		bls	.L43
 936              	.LVL98:
 937              	.L41:
 123:Src/graphics.c **** 
 938              		.loc 1 123 1 view .LVU184
 939              		@ sp needed
 940 000a 10BD     		pop	{r4, pc}
 941              	.LVL99:
 942              	.L43:
ARM GAS  /tmp/ccYF30DA.s 			page 23


 122:Src/graphics.c **** }
 943              		.loc 1 122 3 is_stmt 1 view .LVU185
 944 000c 4E23     		movs	r3, #78
 945 000e 591A     		subs	r1, r3, r1
 946              	.LVL100:
 122:Src/graphics.c **** }
 947              		.loc 1 122 3 is_stmt 0 view .LVU186
 948 0010 89B2     		uxth	r1, r1
 949 0012 9E23     		movs	r3, #158
 950 0014 181A     		subs	r0, r3, r0
 951              	.LVL101:
 122:Src/graphics.c **** }
 952              		.loc 1 122 3 view .LVU187
 953 0016 80B2     		uxth	r0, r0
 954 0018 FFF7FEFF 		bl	IPS_SetUWORD
 955              	.LVL102:
 122:Src/graphics.c **** }
 956              		.loc 1 122 3 view .LVU188
 957 001c F5E7     		b	.L41
 958              		.cfi_endproc
 959              	.LFE47:
 961              		.section	.text.IPS_DrawChar,"ax",%progbits
 962              		.align	1
 963              		.global	IPS_DrawChar
 964              		.syntax unified
 965              		.code	16
 966              		.thumb_func
 967              		.fpu softvfp
 969              	IPS_DrawChar:
 970              	.LVL103:
 971              	.LFB46:
  96:Src/graphics.c ****   uint16_t Page, Column;
 972              		.loc 1 96 1 is_stmt 1 view -0
 973              		.cfi_startproc
 974              		@ args = 8, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Src/graphics.c ****   uint16_t Page, Column;
 976              		.loc 1 96 1 is_stmt 0 view .LVU190
 977 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 978              	.LCFI17:
 979              		.cfi_def_cfa_offset 24
 980              		.cfi_offset 3, -24
 981              		.cfi_offset 4, -20
 982              		.cfi_offset 5, -16
 983              		.cfi_offset 6, -12
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 DE46     		mov	lr, fp
 987 0004 5746     		mov	r7, r10
 988 0006 4E46     		mov	r6, r9
 989 0008 4546     		mov	r5, r8
 990 000a E0B5     		push	{r5, r6, r7, lr}
 991              	.LCFI18:
 992              		.cfi_def_cfa_offset 40
 993              		.cfi_offset 8, -40
 994              		.cfi_offset 9, -36
 995              		.cfi_offset 10, -32
ARM GAS  /tmp/ccYF30DA.s 			page 24


 996              		.cfi_offset 11, -28
 997 000c 8146     		mov	r9, r0
 998 000e 8A46     		mov	r10, r1
 999 0010 1F00     		movs	r7, r3
 1000 0012 0AAB     		add	r3, sp, #40
 1001              	.LVL104:
  96:Src/graphics.c ****   uint16_t Page, Column;
 1002              		.loc 1 96 1 view .LVU191
 1003 0014 1B88     		ldrh	r3, [r3]
 1004              	.LVL105:
  96:Src/graphics.c ****   uint16_t Page, Column;
 1005              		.loc 1 96 1 view .LVU192
 1006 0016 9846     		mov	r8, r3
 1007 0018 0BAB     		add	r3, sp, #44
 1008              	.LVL106:
  96:Src/graphics.c ****   uint16_t Page, Column;
 1009              		.loc 1 96 1 view .LVU193
 1010 001a 1B88     		ldrh	r3, [r3]
 1011              	.LVL107:
  96:Src/graphics.c ****   uint16_t Page, Column;
 1012              		.loc 1 96 1 view .LVU194
 1013 001c 9B46     		mov	fp, r3
  97:Src/graphics.c **** 
 1014              		.loc 1 97 3 is_stmt 1 view .LVU195
  99:Src/graphics.c **** 
 1015              		.loc 1 99 3 view .LVU196
  99:Src/graphics.c **** 
 1016              		.loc 1 99 6 is_stmt 0 view .LVU197
 1017 001e 9F28     		cmp	r0, #159
 1018 0020 55D8     		bhi	.L44
  99:Src/graphics.c **** 
 1019              		.loc 1 99 23 discriminator 2 view .LVU198
 1020 0022 4F29     		cmp	r1, #79
 1021 0024 53D8     		bhi	.L44
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1022              		.loc 1 101 3 is_stmt 1 view .LVU199
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1023              		.loc 1 101 29 is_stmt 0 view .LVU200
 1024 0026 203A     		subs	r2, r2, #32
 1025              	.LVL108:
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1026              		.loc 1 101 42 view .LVU201
 1027 0028 FD88     		ldrh	r5, [r7, #6]
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1028              		.loc 1 101 36 view .LVU202
 1029 002a 6A43     		muls	r2, r5
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1030              		.loc 1 101 58 view .LVU203
 1031 002c B988     		ldrh	r1, [r7, #4]
 1032              	.LVL109:
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1033              		.loc 1 101 66 view .LVU204
 1034 002e CD08     		lsrs	r5, r1, #3
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1035              		.loc 1 101 93 view .LVU205
 1036 0030 0723     		movs	r3, #7
 1037 0032 0B40     		ands	r3, r1
ARM GAS  /tmp/ccYF30DA.s 			page 25


 1038 0034 591E     		subs	r1, r3, #1
 1039 0036 8B41     		sbcs	r3, r3, r1
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1040              		.loc 1 101 70 view .LVU206
 1041 0038 ED18     		adds	r5, r5, r3
 101:Src/graphics.c ****   const unsigned char *ptr = &Font->table[Char_Offset];
 1042              		.loc 1 101 51 view .LVU207
 1043 003a 5543     		muls	r5, r2
 1044              	.LVL110:
 102:Src/graphics.c **** 
 1045              		.loc 1 102 3 is_stmt 1 view .LVU208
 102:Src/graphics.c **** 
 1046              		.loc 1 102 24 is_stmt 0 view .LVU209
 1047 003c 3B68     		ldr	r3, [r7]
 1048 003e 9C46     		mov	ip, r3
 1049 0040 6544     		add	r5, r5, ip
 1050              	.LVL111:
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1051              		.loc 1 104 3 is_stmt 1 view .LVU210
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1052              		.loc 1 104 13 is_stmt 0 view .LVU211
 1053 0042 0026     		movs	r6, #0
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1054              		.loc 1 104 3 view .LVU212
 1055 0044 3EE0     		b	.L46
 1056              	.LVL112:
 1057              	.L57:
 108:Src/graphics.c ****     } else {
 1058              		.loc 1 108 7 is_stmt 1 view .LVU213
 108:Src/graphics.c ****     } else {
 1059              		.loc 1 108 11 is_stmt 0 view .LVU214
 1060 0046 2978     		ldrb	r1, [r5]
 108:Src/graphics.c ****     } else {
 1061              		.loc 1 108 35 view .LVU215
 1062 0048 0722     		movs	r2, #7
 1063 004a 2240     		ands	r2, r4
 108:Src/graphics.c ****     } else {
 1064              		.loc 1 108 24 view .LVU216
 1065 004c 8023     		movs	r3, #128
 1066 004e 1341     		asrs	r3, r3, r2
 108:Src/graphics.c ****     } else {
 1067              		.loc 1 108 10 view .LVU217
 1068 0050 0B42     		tst	r3, r1
 1069 0052 12D0     		beq	.L48
 108:Src/graphics.c ****     } else {
 1070              		.loc 1 108 42 is_stmt 1 discriminator 1 view .LVU218
 1071 0054 5346     		mov	r3, r10
 1072 0056 F118     		adds	r1, r6, r3
 1073 0058 89B2     		uxth	r1, r1
 1074 005a 4B46     		mov	r3, r9
 1075 005c E018     		adds	r0, r4, r3
 1076 005e 80B2     		uxth	r0, r0
 1077 0060 5A46     		mov	r2, fp
 1078 0062 FFF7FEFF 		bl	IPS_SetPixel
 1079              	.LVL113:
 1080 0066 08E0     		b	.L48
 1081              	.L49:
ARM GAS  /tmp/ccYF30DA.s 			page 26


 111:Src/graphics.c ****       }
 1082              		.loc 1 111 12 view .LVU219
 1083 0068 5346     		mov	r3, r10
 1084 006a F118     		adds	r1, r6, r3
 1085 006c 89B2     		uxth	r1, r1
 1086 006e 4B46     		mov	r3, r9
 1087 0070 E018     		adds	r0, r4, r3
 1088 0072 80B2     		uxth	r0, r0
 1089 0074 4246     		mov	r2, r8
 1090 0076 FFF7FEFF 		bl	IPS_SetPixel
 1091              	.LVL114:
 1092              	.L48:
 113:Src/graphics.c ****     }
 1093              		.loc 1 113 5 view .LVU220
 113:Src/graphics.c ****     }
 1094              		.loc 1 113 20 is_stmt 0 view .LVU221
 1095 007a 0723     		movs	r3, #7
 1096 007c 2340     		ands	r3, r4
 113:Src/graphics.c ****     }
 1097              		.loc 1 113 8 view .LVU222
 1098 007e 072B     		cmp	r3, #7
 1099 0080 19D0     		beq	.L55
 1100              	.L50:
 105:Src/graphics.c **** 
 1101              		.loc 1 105 44 is_stmt 1 discriminator 2 view .LVU223
 105:Src/graphics.c **** 
 1102              		.loc 1 105 51 is_stmt 0 discriminator 2 view .LVU224
 1103 0082 0134     		adds	r4, r4, #1
 1104              	.LVL115:
 105:Src/graphics.c **** 
 1105              		.loc 1 105 51 discriminator 2 view .LVU225
 1106 0084 A4B2     		uxth	r4, r4
 1107              	.LVL116:
 1108              	.L53:
 105:Src/graphics.c **** 
 1109              		.loc 1 105 22 is_stmt 1 discriminator 1 view .LVU226
 105:Src/graphics.c **** 
 1110              		.loc 1 105 35 is_stmt 0 discriminator 1 view .LVU227
 1111 0086 BB88     		ldrh	r3, [r7, #4]
 105:Src/graphics.c **** 
 1112              		.loc 1 105 5 discriminator 1 view .LVU228
 1113 0088 A342     		cmp	r3, r4
 1114 008a 16D9     		bls	.L56
 107:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel(x + Column, y + Page, Color_Foreground);
 1115              		.loc 1 107 5 is_stmt 1 view .LVU229
 107:Src/graphics.c ****       if (*ptr & (0x80 >> (Column % 8))) IPS_SetPixel(x + Column, y + Page, Color_Foreground);
 1116              		.loc 1 107 8 is_stmt 0 view .LVU230
 1117 008c FC23     		movs	r3, #252
 1118 008e DB00     		lsls	r3, r3, #3
 1119 0090 9845     		cmp	r8, r3
 1120 0092 D8D0     		beq	.L57
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 1121              		.loc 1 110 7 is_stmt 1 view .LVU231
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 1122              		.loc 1 110 11 is_stmt 0 view .LVU232
 1123 0094 2978     		ldrb	r1, [r5]
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
ARM GAS  /tmp/ccYF30DA.s 			page 27


 1124              		.loc 1 110 35 view .LVU233
 1125 0096 0722     		movs	r2, #7
 1126 0098 2240     		ands	r2, r4
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 1127              		.loc 1 110 24 view .LVU234
 1128 009a 8023     		movs	r3, #128
 1129 009c 1341     		asrs	r3, r3, r2
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 1130              		.loc 1 110 10 view .LVU235
 1131 009e 0B42     		tst	r3, r1
 1132 00a0 E2D0     		beq	.L49
 110:Src/graphics.c ****       else IPS_SetPixel(x + Column, y + Page, Color_Background);
 1133              		.loc 1 110 42 is_stmt 1 discriminator 1 view .LVU236
 1134 00a2 5346     		mov	r3, r10
 1135 00a4 F118     		adds	r1, r6, r3
 1136 00a6 89B2     		uxth	r1, r1
 1137 00a8 4B46     		mov	r3, r9
 1138 00aa E018     		adds	r0, r4, r3
 1139 00ac 80B2     		uxth	r0, r0
 1140 00ae 5A46     		mov	r2, fp
 1141 00b0 FFF7FEFF 		bl	IPS_SetPixel
 1142              	.LVL117:
 1143 00b4 E1E7     		b	.L48
 1144              	.L55:
 113:Src/graphics.c ****     }
 1145              		.loc 1 113 26 discriminator 1 view .LVU237
 113:Src/graphics.c ****     }
 1146              		.loc 1 113 29 is_stmt 0 discriminator 1 view .LVU238
 1147 00b6 0135     		adds	r5, r5, #1
 1148              	.LVL118:
 113:Src/graphics.c ****     }
 1149              		.loc 1 113 29 discriminator 1 view .LVU239
 1150 00b8 E3E7     		b	.L50
 1151              	.L56:
 115:Src/graphics.c ****   }
 1152              		.loc 1 115 5 is_stmt 1 view .LVU240
 115:Src/graphics.c ****   }
 1153              		.loc 1 115 8 is_stmt 0 view .LVU241
 1154 00ba 5B07     		lsls	r3, r3, #29
 1155 00bc 00D0     		beq	.L52
 115:Src/graphics.c ****   }
 1156              		.loc 1 115 31 is_stmt 1 discriminator 1 view .LVU242
 115:Src/graphics.c ****   }
 1157              		.loc 1 115 34 is_stmt 0 discriminator 1 view .LVU243
 1158 00be 0135     		adds	r5, r5, #1
 1159              	.LVL119:
 1160              	.L52:
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1161              		.loc 1 104 39 is_stmt 1 discriminator 2 view .LVU244
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1162              		.loc 1 104 44 is_stmt 0 discriminator 2 view .LVU245
 1163 00c0 0136     		adds	r6, r6, #1
 1164              	.LVL120:
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1165              		.loc 1 104 44 discriminator 2 view .LVU246
 1166 00c2 B6B2     		uxth	r6, r6
 1167              	.LVL121:
ARM GAS  /tmp/ccYF30DA.s 			page 28


 1168              	.L46:
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1169              		.loc 1 104 18 is_stmt 1 discriminator 1 view .LVU247
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1170              		.loc 1 104 29 is_stmt 0 discriminator 1 view .LVU248
 1171 00c4 FB88     		ldrh	r3, [r7, #6]
 104:Src/graphics.c ****     for (Column = 0; Column < Font->Width; Column ++ ) {
 1172              		.loc 1 104 3 discriminator 1 view .LVU249
 1173 00c6 B342     		cmp	r3, r6
 1174 00c8 01D9     		bls	.L44
 105:Src/graphics.c **** 
 1175              		.loc 1 105 17 view .LVU250
 1176 00ca 0024     		movs	r4, #0
 1177 00cc DBE7     		b	.L53
 1178              	.LVL122:
 1179              	.L44:
 117:Src/graphics.c **** 
 1180              		.loc 1 117 1 view .LVU251
 1181              		@ sp needed
 1182              	.LVL123:
 117:Src/graphics.c **** 
 1183              		.loc 1 117 1 view .LVU252
 1184 00ce 3CBC     		pop	{r2, r3, r4, r5}
 1185 00d0 9046     		mov	r8, r2
 1186 00d2 9946     		mov	r9, r3
 1187 00d4 A246     		mov	r10, r4
 1188 00d6 AB46     		mov	fp, r5
 1189 00d8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE46:
 1193              		.section	.text.IPS_DrawString,"ax",%progbits
 1194              		.align	1
 1195              		.global	IPS_DrawString
 1196              		.syntax unified
 1197              		.code	16
 1198              		.thumb_func
 1199              		.fpu softvfp
 1201              	IPS_DrawString:
 1202              	.LVL124:
 1203              	.LFB45:
  70:Src/graphics.c ****   uint16_t _x = x;
 1204              		.loc 1 70 1 is_stmt 1 view -0
 1205              		.cfi_startproc
 1206              		@ args = 8, pretend = 0, frame = 8
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
  70:Src/graphics.c ****   uint16_t _x = x;
 1208              		.loc 1 70 1 is_stmt 0 view .LVU254
 1209 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1210              	.LCFI19:
 1211              		.cfi_def_cfa_offset 20
 1212              		.cfi_offset 4, -20
 1213              		.cfi_offset 5, -16
 1214              		.cfi_offset 6, -12
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 DE46     		mov	lr, fp
 1218 0004 5746     		mov	r7, r10
ARM GAS  /tmp/ccYF30DA.s 			page 29


 1219 0006 80B5     		push	{r7, lr}
 1220              	.LCFI20:
 1221              		.cfi_def_cfa_offset 28
 1222              		.cfi_offset 10, -28
 1223              		.cfi_offset 11, -24
 1224 0008 85B0     		sub	sp, sp, #20
 1225              	.LCFI21:
 1226              		.cfi_def_cfa_offset 48
 1227 000a 0290     		str	r0, [sp, #8]
 1228 000c 0391     		str	r1, [sp, #12]
 1229 000e 1600     		movs	r6, r2
 1230 0010 1C00     		movs	r4, r3
 1231 0012 0CAB     		add	r3, sp, #48
 1232              	.LVL125:
  70:Src/graphics.c ****   uint16_t _x = x;
 1233              		.loc 1 70 1 view .LVU255
 1234 0014 1B88     		ldrh	r3, [r3]
 1235              	.LVL126:
  70:Src/graphics.c ****   uint16_t _x = x;
 1236              		.loc 1 70 1 view .LVU256
 1237 0016 9A46     		mov	r10, r3
 1238 0018 0DAB     		add	r3, sp, #52
 1239              	.LVL127:
  70:Src/graphics.c ****   uint16_t _x = x;
 1240              		.loc 1 70 1 view .LVU257
 1241 001a 1B88     		ldrh	r3, [r3]
 1242              	.LVL128:
  70:Src/graphics.c ****   uint16_t _x = x;
 1243              		.loc 1 70 1 view .LVU258
 1244 001c 9B46     		mov	fp, r3
  71:Src/graphics.c ****   uint16_t _y = y;
 1245              		.loc 1 71 3 is_stmt 1 view .LVU259
 1246              	.LVL129:
  72:Src/graphics.c **** 
 1247              		.loc 1 72 3 view .LVU260
  74:Src/graphics.c **** 
 1248              		.loc 1 74 3 view .LVU261
  74:Src/graphics.c **** 
 1249              		.loc 1 74 6 is_stmt 0 view .LVU262
 1250 001e 9F28     		cmp	r0, #159
 1251 0020 23D8     		bhi	.L58
  74:Src/graphics.c **** 
 1252              		.loc 1 74 23 discriminator 2 view .LVU263
 1253 0022 4F29     		cmp	r1, #79
 1254 0024 21D8     		bhi	.L58
  72:Src/graphics.c **** 
 1255              		.loc 1 72 12 view .LVU264
 1256 0026 0F00     		movs	r7, r1
  71:Src/graphics.c ****   uint16_t _y = y;
 1257              		.loc 1 71 12 view .LVU265
 1258 0028 0500     		movs	r5, r0
 1259 002a 12E0     		b	.L60
 1260              	.LVL130:
 1261              	.L61:
  82:Src/graphics.c ****   _x = x;
 1262              		.loc 1 82 3 is_stmt 1 view .LVU266
  82:Src/graphics.c ****   _x = x;
ARM GAS  /tmp/ccYF30DA.s 			page 30


 1263              		.loc 1 82 18 is_stmt 0 view .LVU267
 1264 002c E388     		ldrh	r3, [r4, #6]
  82:Src/graphics.c ****   _x = x;
 1265              		.loc 1 82 12 view .LVU268
 1266 002e FB18     		adds	r3, r7, r3
  82:Src/graphics.c ****   _x = x;
 1267              		.loc 1 82 6 view .LVU269
 1268 0030 4F2B     		cmp	r3, #79
 1269 0032 01DD     		ble	.L62
  84:Src/graphics.c ****   }
 1270              		.loc 1 84 6 view .LVU270
 1271 0034 039F     		ldr	r7, [sp, #12]
 1272              	.LVL131:
  83:Src/graphics.c ****   _y = y;
 1273              		.loc 1 83 6 view .LVU271
 1274 0036 029D     		ldr	r5, [sp, #8]
 1275              	.LVL132:
 1276              	.L62:
  87:Src/graphics.c **** 
 1277              		.loc 1 87 3 is_stmt 1 view .LVU272
 1278 0038 5B46     		mov	r3, fp
 1279 003a 0193     		str	r3, [sp, #4]
 1280 003c 5346     		mov	r3, r10
 1281 003e 0093     		str	r3, [sp]
 1282 0040 2300     		movs	r3, r4
 1283 0042 3900     		movs	r1, r7
 1284 0044 2800     		movs	r0, r5
 1285 0046 FFF7FEFF 		bl	IPS_DrawChar
 1286              	.LVL133:
  89:Src/graphics.c **** 
 1287              		.loc 1 89 3 view .LVU273
  89:Src/graphics.c **** 
 1288              		.loc 1 89 11 is_stmt 0 view .LVU274
 1289 004a 0136     		adds	r6, r6, #1
 1290              	.LVL134:
  91:Src/graphics.c ****   }
 1291              		.loc 1 91 3 is_stmt 1 view .LVU275
  91:Src/graphics.c ****   }
 1292              		.loc 1 91 13 is_stmt 0 view .LVU276
 1293 004c A388     		ldrh	r3, [r4, #4]
  91:Src/graphics.c ****   }
 1294              		.loc 1 91 6 view .LVU277
 1295 004e 5D19     		adds	r5, r3, r5
 1296              	.LVL135:
  91:Src/graphics.c ****   }
 1297              		.loc 1 91 6 view .LVU278
 1298 0050 ADB2     		uxth	r5, r5
 1299              	.LVL136:
 1300              	.L60:
  76:Src/graphics.c ****   if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
 1301              		.loc 1 76 9 is_stmt 1 view .LVU279
  76:Src/graphics.c ****   if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
 1302              		.loc 1 76 10 is_stmt 0 view .LVU280
 1303 0052 3278     		ldrb	r2, [r6]
  76:Src/graphics.c ****   if ((_x + Font->Width ) > IPS_WIDTH-1 ) {
 1304              		.loc 1 76 9 view .LVU281
 1305 0054 002A     		cmp	r2, #0
ARM GAS  /tmp/ccYF30DA.s 			page 31


 1306 0056 08D0     		beq	.L58
  77:Src/graphics.c ****   _x = x;
 1307              		.loc 1 77 3 is_stmt 1 view .LVU282
  77:Src/graphics.c ****   _x = x;
 1308              		.loc 1 77 17 is_stmt 0 view .LVU283
 1309 0058 A388     		ldrh	r3, [r4, #4]
  77:Src/graphics.c ****   _x = x;
 1310              		.loc 1 77 11 view .LVU284
 1311 005a EB18     		adds	r3, r5, r3
  77:Src/graphics.c ****   _x = x;
 1312              		.loc 1 77 6 view .LVU285
 1313 005c 9F2B     		cmp	r3, #159
 1314 005e E5DD     		ble	.L61
  78:Src/graphics.c ****   _y += Font->Height;
 1315              		.loc 1 78 3 is_stmt 1 view .LVU286
 1316              	.LVL137:
  79:Src/graphics.c ****   }
 1317              		.loc 1 79 3 view .LVU287
  79:Src/graphics.c ****   }
 1318              		.loc 1 79 13 is_stmt 0 view .LVU288
 1319 0060 E388     		ldrh	r3, [r4, #6]
  79:Src/graphics.c ****   }
 1320              		.loc 1 79 6 view .LVU289
 1321 0062 DF19     		adds	r7, r3, r7
 1322              	.LVL138:
  79:Src/graphics.c ****   }
 1323              		.loc 1 79 6 view .LVU290
 1324 0064 BFB2     		uxth	r7, r7
 1325              	.LVL139:
  78:Src/graphics.c ****   _y += Font->Height;
 1326              		.loc 1 78 6 view .LVU291
 1327 0066 029D     		ldr	r5, [sp, #8]
 1328 0068 E0E7     		b	.L61
 1329              	.LVL140:
 1330              	.L58:
  93:Src/graphics.c **** 
 1331              		.loc 1 93 1 view .LVU292
 1332 006a 05B0     		add	sp, sp, #20
 1333              		@ sp needed
 1334              	.LVL141:
 1335              	.LVL142:
  93:Src/graphics.c **** 
 1336              		.loc 1 93 1 view .LVU293
 1337 006c 0CBC     		pop	{r2, r3}
 1338 006e 9246     		mov	r10, r2
 1339 0070 9B46     		mov	fp, r3
 1340 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 1341              		.cfi_endproc
 1342              	.LFE45:
 1344              		.section	.text.IPS_Clear,"ax",%progbits
 1345              		.align	1
 1346              		.global	IPS_Clear
 1347              		.syntax unified
 1348              		.code	16
 1349              		.thumb_func
 1350              		.fpu softvfp
 1352              	IPS_Clear:
ARM GAS  /tmp/ccYF30DA.s 			page 32


 1353              	.LVL143:
 1354              	.LFB50:
 153:Src/graphics.c ****   IPS_SetCursor(0, 0, IPS_WIDTH-1, IPS_HEIGHT-1);
 1355              		.loc 1 153 1 is_stmt 1 view -0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 153:Src/graphics.c ****   IPS_SetCursor(0, 0, IPS_WIDTH-1, IPS_HEIGHT-1);
 1359              		.loc 1 153 1 is_stmt 0 view .LVU295
 1360 0000 70B5     		push	{r4, r5, r6, lr}
 1361              	.LCFI22:
 1362              		.cfi_def_cfa_offset 16
 1363              		.cfi_offset 4, -16
 1364              		.cfi_offset 5, -12
 1365              		.cfi_offset 6, -8
 1366              		.cfi_offset 14, -4
 1367 0002 0500     		movs	r5, r0
 154:Src/graphics.c ****   for(uint16_t i = 0; i < IPS_WIDTH; i++){
 1368              		.loc 1 154 3 is_stmt 1 view .LVU296
 1369 0004 4F23     		movs	r3, #79
 1370 0006 9F22     		movs	r2, #159
 1371 0008 0021     		movs	r1, #0
 1372 000a 0020     		movs	r0, #0
 1373              	.LVL144:
 154:Src/graphics.c ****   for(uint16_t i = 0; i < IPS_WIDTH; i++){
 1374              		.loc 1 154 3 is_stmt 0 view .LVU297
 1375 000c FFF7FEFF 		bl	IPS_SetCursor
 1376              	.LVL145:
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1377              		.loc 1 155 3 is_stmt 1 view .LVU298
 1378              	.LBB6:
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1379              		.loc 1 155 7 view .LVU299
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1380              		.loc 1 155 16 is_stmt 0 view .LVU300
 1381 0010 0026     		movs	r6, #0
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1382              		.loc 1 155 3 view .LVU301
 1383 0012 08E0     		b	.L66
 1384              	.LVL146:
 1385              	.L67:
 1386              	.LBB7:
 157:Src/graphics.c ****     }
 1387              		.loc 1 157 7 is_stmt 1 discriminator 3 view .LVU302
 1388 0014 2800     		movs	r0, r5
 1389 0016 FFF7FEFF 		bl	IPS_WriteData_Word
 1390              	.LVL147:
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1391              		.loc 1 156 41 discriminator 3 view .LVU303
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1392              		.loc 1 156 42 is_stmt 0 discriminator 3 view .LVU304
 1393 001a 0134     		adds	r4, r4, #1
 1394              	.LVL148:
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1395              		.loc 1 156 42 discriminator 3 view .LVU305
 1396 001c A4B2     		uxth	r4, r4
 1397              	.LVL149:
ARM GAS  /tmp/ccYF30DA.s 			page 33


 1398              	.L68:
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1399              		.loc 1 156 25 is_stmt 1 discriminator 1 view .LVU306
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1400              		.loc 1 156 5 is_stmt 0 discriminator 1 view .LVU307
 1401 001e 4F2C     		cmp	r4, #79
 1402 0020 F8D9     		bls	.L67
 1403              	.LBE7:
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1404              		.loc 1 155 38 is_stmt 1 discriminator 2 view .LVU308
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1405              		.loc 1 155 39 is_stmt 0 discriminator 2 view .LVU309
 1406 0022 0136     		adds	r6, r6, #1
 1407              	.LVL150:
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1408              		.loc 1 155 39 discriminator 2 view .LVU310
 1409 0024 B6B2     		uxth	r6, r6
 1410              	.LVL151:
 1411              	.L66:
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1412              		.loc 1 155 23 is_stmt 1 discriminator 1 view .LVU311
 155:Src/graphics.c ****     for(uint16_t j = 0; j < IPS_HEIGHT; j++){
 1413              		.loc 1 155 3 is_stmt 0 discriminator 1 view .LVU312
 1414 0026 9F2E     		cmp	r6, #159
 1415 0028 01D8     		bhi	.L70
 1416              	.LBB8:
 156:Src/graphics.c ****       IPS_WriteData_Word(Color);
 1417              		.loc 1 156 18 view .LVU313
 1418 002a 0024     		movs	r4, #0
 1419 002c F7E7     		b	.L68
 1420              	.L70:
 1421              	.LBE8:
 1422              	.LBE6:
 160:Src/graphics.c **** 
 1423              		.loc 1 160 1 view .LVU314
 1424              		@ sp needed
 1425              	.LVL152:
 160:Src/graphics.c **** 
 1426              		.loc 1 160 1 view .LVU315
 1427 002e 70BD     		pop	{r4, r5, r6, pc}
 1428              		.cfi_endproc
 1429              	.LFE50:
 1431              		.section	.text.IPS_Init,"ax",%progbits
 1432              		.align	1
 1433              		.global	IPS_Init
 1434              		.syntax unified
 1435              		.code	16
 1436              		.thumb_func
 1437              		.fpu softvfp
 1439              	IPS_Init:
 1440              	.LFB55:
 192:Src/graphics.c **** 
 193:Src/graphics.c **** void IPS_Init(void)
 194:Src/graphics.c **** {
 1441              		.loc 1 194 1 is_stmt 1 view -0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYF30DA.s 			page 34


 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445 0000 10B5     		push	{r4, lr}
 1446              	.LCFI23:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
 195:Src/graphics.c **** 	IPS_Reset();
 1450              		.loc 1 195 2 view .LVU317
 1451 0002 FFF7FEFF 		bl	IPS_Reset
 1452              	.LVL153:
 196:Src/graphics.c **** 
 197:Src/graphics.c **** 	IPS_WriteReg(0x11);//Sleep exit
 1453              		.loc 1 197 2 view .LVU318
 1454 0006 1120     		movs	r0, #17
 1455 0008 FFF7FEFF 		bl	IPS_WriteReg
 1456              	.LVL154:
 198:Src/graphics.c **** 	HAL_Delay (120);
 1457              		.loc 1 198 2 view .LVU319
 1458 000c 7820     		movs	r0, #120
 1459 000e FFF7FEFF 		bl	HAL_Delay
 1460              	.LVL155:
 199:Src/graphics.c **** 
 200:Src/graphics.c ****   IPS_WriteReg(0x21);
 1461              		.loc 1 200 3 view .LVU320
 1462 0012 2120     		movs	r0, #33
 1463 0014 FFF7FEFF 		bl	IPS_WriteReg
 1464              	.LVL156:
 201:Src/graphics.c ****   IPS_WriteReg(0x21);
 1465              		.loc 1 201 3 view .LVU321
 1466 0018 2120     		movs	r0, #33
 1467 001a FFF7FEFF 		bl	IPS_WriteReg
 1468              	.LVL157:
 202:Src/graphics.c **** 
 203:Src/graphics.c ****   IPS_WriteReg(0xB1);
 1469              		.loc 1 203 3 view .LVU322
 1470 001e B120     		movs	r0, #177
 1471 0020 FFF7FEFF 		bl	IPS_WriteReg
 1472              	.LVL158:
 204:Src/graphics.c ****   IPS_WriteData_Byte(0x05);
 1473              		.loc 1 204 3 view .LVU323
 1474 0024 0520     		movs	r0, #5
 1475 0026 FFF7FEFF 		bl	IPS_WriteData_Byte
 1476              	.LVL159:
 205:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1477              		.loc 1 205 3 view .LVU324
 1478 002a 3A20     		movs	r0, #58
 1479 002c FFF7FEFF 		bl	IPS_WriteData_Byte
 1480              	.LVL160:
 206:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1481              		.loc 1 206 3 view .LVU325
 1482 0030 3A20     		movs	r0, #58
 1483 0032 FFF7FEFF 		bl	IPS_WriteData_Byte
 1484              	.LVL161:
 207:Src/graphics.c **** 
 208:Src/graphics.c ****   IPS_WriteReg(0xB2);
 1485              		.loc 1 208 3 view .LVU326
 1486 0036 B220     		movs	r0, #178
ARM GAS  /tmp/ccYF30DA.s 			page 35


 1487 0038 FFF7FEFF 		bl	IPS_WriteReg
 1488              	.LVL162:
 209:Src/graphics.c ****   IPS_WriteData_Byte(0x05);
 1489              		.loc 1 209 3 view .LVU327
 1490 003c 0520     		movs	r0, #5
 1491 003e FFF7FEFF 		bl	IPS_WriteData_Byte
 1492              	.LVL163:
 210:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1493              		.loc 1 210 3 view .LVU328
 1494 0042 3A20     		movs	r0, #58
 1495 0044 FFF7FEFF 		bl	IPS_WriteData_Byte
 1496              	.LVL164:
 211:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1497              		.loc 1 211 3 view .LVU329
 1498 0048 3A20     		movs	r0, #58
 1499 004a FFF7FEFF 		bl	IPS_WriteData_Byte
 1500              	.LVL165:
 212:Src/graphics.c **** 
 213:Src/graphics.c ****   IPS_WriteReg(0xB3);
 1501              		.loc 1 213 3 view .LVU330
 1502 004e B320     		movs	r0, #179
 1503 0050 FFF7FEFF 		bl	IPS_WriteReg
 1504              	.LVL166:
 214:Src/graphics.c ****   IPS_WriteData_Byte(0x05);
 1505              		.loc 1 214 3 view .LVU331
 1506 0054 0520     		movs	r0, #5
 1507 0056 FFF7FEFF 		bl	IPS_WriteData_Byte
 1508              	.LVL167:
 215:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1509              		.loc 1 215 3 view .LVU332
 1510 005a 3A20     		movs	r0, #58
 1511 005c FFF7FEFF 		bl	IPS_WriteData_Byte
 1512              	.LVL168:
 216:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1513              		.loc 1 216 3 view .LVU333
 1514 0060 3A20     		movs	r0, #58
 1515 0062 FFF7FEFF 		bl	IPS_WriteData_Byte
 1516              	.LVL169:
 217:Src/graphics.c ****   IPS_WriteData_Byte(0x05);
 1517              		.loc 1 217 3 view .LVU334
 1518 0066 0520     		movs	r0, #5
 1519 0068 FFF7FEFF 		bl	IPS_WriteData_Byte
 1520              	.LVL170:
 218:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1521              		.loc 1 218 3 view .LVU335
 1522 006c 3A20     		movs	r0, #58
 1523 006e FFF7FEFF 		bl	IPS_WriteData_Byte
 1524              	.LVL171:
 219:Src/graphics.c ****   IPS_WriteData_Byte(0x3A);
 1525              		.loc 1 219 3 view .LVU336
 1526 0072 3A20     		movs	r0, #58
 1527 0074 FFF7FEFF 		bl	IPS_WriteData_Byte
 1528              	.LVL172:
 220:Src/graphics.c **** 
 221:Src/graphics.c ****   IPS_WriteReg(0xB4);
 1529              		.loc 1 221 3 view .LVU337
 1530 0078 B420     		movs	r0, #180
ARM GAS  /tmp/ccYF30DA.s 			page 36


 1531 007a FFF7FEFF 		bl	IPS_WriteReg
 1532              	.LVL173:
 222:Src/graphics.c ****   IPS_WriteData_Byte(0x03);
 1533              		.loc 1 222 3 view .LVU338
 1534 007e 0320     		movs	r0, #3
 1535 0080 FFF7FEFF 		bl	IPS_WriteData_Byte
 1536              	.LVL174:
 223:Src/graphics.c **** 
 224:Src/graphics.c ****   IPS_WriteReg(0xC0);
 1537              		.loc 1 224 3 view .LVU339
 1538 0084 C020     		movs	r0, #192
 1539 0086 FFF7FEFF 		bl	IPS_WriteReg
 1540              	.LVL175:
 225:Src/graphics.c ****   IPS_WriteData_Byte(0x62);
 1541              		.loc 1 225 3 view .LVU340
 1542 008a 6220     		movs	r0, #98
 1543 008c FFF7FEFF 		bl	IPS_WriteData_Byte
 1544              	.LVL176:
 226:Src/graphics.c ****   IPS_WriteData_Byte(0x02);
 1545              		.loc 1 226 3 view .LVU341
 1546 0090 0220     		movs	r0, #2
 1547 0092 FFF7FEFF 		bl	IPS_WriteData_Byte
 1548              	.LVL177:
 227:Src/graphics.c ****   IPS_WriteData_Byte(0x04);
 1549              		.loc 1 227 3 view .LVU342
 1550 0096 0420     		movs	r0, #4
 1551 0098 FFF7FEFF 		bl	IPS_WriteData_Byte
 1552              	.LVL178:
 228:Src/graphics.c **** 
 229:Src/graphics.c ****   IPS_WriteReg(0xC1);
 1553              		.loc 1 229 3 view .LVU343
 1554 009c C120     		movs	r0, #193
 1555 009e FFF7FEFF 		bl	IPS_WriteReg
 1556              	.LVL179:
 230:Src/graphics.c ****   IPS_WriteData_Byte(0xC0);
 1557              		.loc 1 230 3 view .LVU344
 1558 00a2 C020     		movs	r0, #192
 1559 00a4 FFF7FEFF 		bl	IPS_WriteData_Byte
 1560              	.LVL180:
 231:Src/graphics.c **** 
 232:Src/graphics.c ****   IPS_WriteReg(0xC2);
 1561              		.loc 1 232 3 view .LVU345
 1562 00a8 C220     		movs	r0, #194
 1563 00aa FFF7FEFF 		bl	IPS_WriteReg
 1564              	.LVL181:
 233:Src/graphics.c ****   IPS_WriteData_Byte(0x0D);
 1565              		.loc 1 233 3 view .LVU346
 1566 00ae 0D20     		movs	r0, #13
 1567 00b0 FFF7FEFF 		bl	IPS_WriteData_Byte
 1568              	.LVL182:
 234:Src/graphics.c ****   IPS_WriteData_Byte(0x00);
 1569              		.loc 1 234 3 view .LVU347
 1570 00b4 0020     		movs	r0, #0
 1571 00b6 FFF7FEFF 		bl	IPS_WriteData_Byte
 1572              	.LVL183:
 235:Src/graphics.c **** 
 236:Src/graphics.c ****   IPS_WriteReg(0xC3);
ARM GAS  /tmp/ccYF30DA.s 			page 37


 1573              		.loc 1 236 3 view .LVU348
 1574 00ba C320     		movs	r0, #195
 1575 00bc FFF7FEFF 		bl	IPS_WriteReg
 1576              	.LVL184:
 237:Src/graphics.c ****   IPS_WriteData_Byte(0x8D);
 1577              		.loc 1 237 3 view .LVU349
 1578 00c0 8D20     		movs	r0, #141
 1579 00c2 FFF7FEFF 		bl	IPS_WriteData_Byte
 1580              	.LVL185:
 238:Src/graphics.c ****   IPS_WriteData_Byte(0x6A);
 1581              		.loc 1 238 3 view .LVU350
 1582 00c6 6A20     		movs	r0, #106
 1583 00c8 FFF7FEFF 		bl	IPS_WriteData_Byte
 1584              	.LVL186:
 239:Src/graphics.c **** 
 240:Src/graphics.c ****   IPS_WriteReg(0xC4);
 1585              		.loc 1 240 3 view .LVU351
 1586 00cc C420     		movs	r0, #196
 1587 00ce FFF7FEFF 		bl	IPS_WriteReg
 1588              	.LVL187:
 241:Src/graphics.c ****   IPS_WriteData_Byte(0x8D);
 1589              		.loc 1 241 3 view .LVU352
 1590 00d2 8D20     		movs	r0, #141
 1591 00d4 FFF7FEFF 		bl	IPS_WriteData_Byte
 1592              	.LVL188:
 242:Src/graphics.c ****   IPS_WriteData_Byte(0xEE);
 1593              		.loc 1 242 3 view .LVU353
 1594 00d8 EE20     		movs	r0, #238
 1595 00da FFF7FEFF 		bl	IPS_WriteData_Byte
 1596              	.LVL189:
 243:Src/graphics.c **** 
 244:Src/graphics.c ****   IPS_WriteReg(0xC5);
 1597              		.loc 1 244 3 view .LVU354
 1598 00de C520     		movs	r0, #197
 1599 00e0 FFF7FEFF 		bl	IPS_WriteReg
 1600              	.LVL190:
 245:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1601              		.loc 1 245 3 view .LVU355
 1602 00e4 0E20     		movs	r0, #14
 1603 00e6 FFF7FEFF 		bl	IPS_WriteData_Byte
 1604              	.LVL191:
 246:Src/graphics.c **** 
 247:Src/graphics.c ****   IPS_WriteReg(0xE0);
 1605              		.loc 1 247 3 view .LVU356
 1606 00ea E020     		movs	r0, #224
 1607 00ec FFF7FEFF 		bl	IPS_WriteReg
 1608              	.LVL192:
 248:Src/graphics.c ****   IPS_WriteData_Byte(0x10);
 1609              		.loc 1 248 3 view .LVU357
 1610 00f0 1020     		movs	r0, #16
 1611 00f2 FFF7FEFF 		bl	IPS_WriteData_Byte
 1612              	.LVL193:
 249:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1613              		.loc 1 249 3 view .LVU358
 1614 00f6 0E20     		movs	r0, #14
 1615 00f8 FFF7FEFF 		bl	IPS_WriteData_Byte
 1616              	.LVL194:
ARM GAS  /tmp/ccYF30DA.s 			page 38


 250:Src/graphics.c ****   IPS_WriteData_Byte(0x02);
 1617              		.loc 1 250 3 view .LVU359
 1618 00fc 0220     		movs	r0, #2
 1619 00fe FFF7FEFF 		bl	IPS_WriteData_Byte
 1620              	.LVL195:
 251:Src/graphics.c ****   IPS_WriteData_Byte(0x03);
 1621              		.loc 1 251 3 view .LVU360
 1622 0102 0320     		movs	r0, #3
 1623 0104 FFF7FEFF 		bl	IPS_WriteData_Byte
 1624              	.LVL196:
 252:Src/graphics.c ****   IPS_WriteData_Byte(0x07);
 1625              		.loc 1 252 3 view .LVU361
 1626 0108 0720     		movs	r0, #7
 1627 010a FFF7FEFF 		bl	IPS_WriteData_Byte
 1628              	.LVL197:
 253:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1629              		.loc 1 253 3 view .LVU362
 1630 010e 0E20     		movs	r0, #14
 1631 0110 FFF7FEFF 		bl	IPS_WriteData_Byte
 1632              	.LVL198:
 254:Src/graphics.c ****   IPS_WriteData_Byte(0x07);
 1633              		.loc 1 254 3 view .LVU363
 1634 0114 0720     		movs	r0, #7
 1635 0116 FFF7FEFF 		bl	IPS_WriteData_Byte
 1636              	.LVL199:
 255:Src/graphics.c ****   IPS_WriteData_Byte(0x02);
 1637              		.loc 1 255 3 view .LVU364
 1638 011a 0220     		movs	r0, #2
 1639 011c FFF7FEFF 		bl	IPS_WriteData_Byte
 1640              	.LVL200:
 256:Src/graphics.c ****   IPS_WriteData_Byte(0x0A);
 1641              		.loc 1 256 3 view .LVU365
 1642 0120 0A20     		movs	r0, #10
 1643 0122 FFF7FEFF 		bl	IPS_WriteData_Byte
 1644              	.LVL201:
 257:Src/graphics.c ****   IPS_WriteData_Byte(0x12);
 1645              		.loc 1 257 3 view .LVU366
 1646 0126 1220     		movs	r0, #18
 1647 0128 FFF7FEFF 		bl	IPS_WriteData_Byte
 1648              	.LVL202:
 258:Src/graphics.c ****   IPS_WriteData_Byte(0x27);
 1649              		.loc 1 258 3 view .LVU367
 1650 012c 2720     		movs	r0, #39
 1651 012e FFF7FEFF 		bl	IPS_WriteData_Byte
 1652              	.LVL203:
 259:Src/graphics.c ****   IPS_WriteData_Byte(0x37);
 1653              		.loc 1 259 3 view .LVU368
 1654 0132 3720     		movs	r0, #55
 1655 0134 FFF7FEFF 		bl	IPS_WriteData_Byte
 1656              	.LVL204:
 260:Src/graphics.c ****   IPS_WriteData_Byte(0x00);
 1657              		.loc 1 260 3 view .LVU369
 1658 0138 0020     		movs	r0, #0
 1659 013a FFF7FEFF 		bl	IPS_WriteData_Byte
 1660              	.LVL205:
 261:Src/graphics.c ****   IPS_WriteData_Byte(0x0D);
 1661              		.loc 1 261 3 view .LVU370
ARM GAS  /tmp/ccYF30DA.s 			page 39


 1662 013e 0D20     		movs	r0, #13
 1663 0140 FFF7FEFF 		bl	IPS_WriteData_Byte
 1664              	.LVL206:
 262:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1665              		.loc 1 262 3 view .LVU371
 1666 0144 0E20     		movs	r0, #14
 1667 0146 FFF7FEFF 		bl	IPS_WriteData_Byte
 1668              	.LVL207:
 263:Src/graphics.c ****   IPS_WriteData_Byte(0x10);
 1669              		.loc 1 263 3 view .LVU372
 1670 014a 1020     		movs	r0, #16
 1671 014c FFF7FEFF 		bl	IPS_WriteData_Byte
 1672              	.LVL208:
 264:Src/graphics.c **** 
 265:Src/graphics.c ****   IPS_WriteReg(0xE1);
 1673              		.loc 1 265 3 view .LVU373
 1674 0150 E120     		movs	r0, #225
 1675 0152 FFF7FEFF 		bl	IPS_WriteReg
 1676              	.LVL209:
 266:Src/graphics.c ****   IPS_WriteData_Byte(0x10);
 1677              		.loc 1 266 3 view .LVU374
 1678 0156 1020     		movs	r0, #16
 1679 0158 FFF7FEFF 		bl	IPS_WriteData_Byte
 1680              	.LVL210:
 267:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1681              		.loc 1 267 3 view .LVU375
 1682 015c 0E20     		movs	r0, #14
 1683 015e FFF7FEFF 		bl	IPS_WriteData_Byte
 1684              	.LVL211:
 268:Src/graphics.c ****   IPS_WriteData_Byte(0x03);
 1685              		.loc 1 268 3 view .LVU376
 1686 0162 0320     		movs	r0, #3
 1687 0164 FFF7FEFF 		bl	IPS_WriteData_Byte
 1688              	.LVL212:
 269:Src/graphics.c ****   IPS_WriteData_Byte(0x03);
 1689              		.loc 1 269 3 view .LVU377
 1690 0168 0320     		movs	r0, #3
 1691 016a FFF7FEFF 		bl	IPS_WriteData_Byte
 1692              	.LVL213:
 270:Src/graphics.c ****   IPS_WriteData_Byte(0x0F);
 1693              		.loc 1 270 3 view .LVU378
 1694 016e 0F20     		movs	r0, #15
 1695 0170 FFF7FEFF 		bl	IPS_WriteData_Byte
 1696              	.LVL214:
 271:Src/graphics.c ****   IPS_WriteData_Byte(0x06);
 1697              		.loc 1 271 3 view .LVU379
 1698 0174 0620     		movs	r0, #6
 1699 0176 FFF7FEFF 		bl	IPS_WriteData_Byte
 1700              	.LVL215:
 272:Src/graphics.c ****   IPS_WriteData_Byte(0x02);
 1701              		.loc 1 272 3 view .LVU380
 1702 017a 0220     		movs	r0, #2
 1703 017c FFF7FEFF 		bl	IPS_WriteData_Byte
 1704              	.LVL216:
 273:Src/graphics.c ****   IPS_WriteData_Byte(0x08);
 1705              		.loc 1 273 3 view .LVU381
 1706 0180 0820     		movs	r0, #8
ARM GAS  /tmp/ccYF30DA.s 			page 40


 1707 0182 FFF7FEFF 		bl	IPS_WriteData_Byte
 1708              	.LVL217:
 274:Src/graphics.c ****   IPS_WriteData_Byte(0x0A);
 1709              		.loc 1 274 3 view .LVU382
 1710 0186 0A20     		movs	r0, #10
 1711 0188 FFF7FEFF 		bl	IPS_WriteData_Byte
 1712              	.LVL218:
 275:Src/graphics.c ****   IPS_WriteData_Byte(0x13);
 1713              		.loc 1 275 3 view .LVU383
 1714 018c 1320     		movs	r0, #19
 1715 018e FFF7FEFF 		bl	IPS_WriteData_Byte
 1716              	.LVL219:
 276:Src/graphics.c ****   IPS_WriteData_Byte(0x26);
 1717              		.loc 1 276 3 view .LVU384
 1718 0192 2620     		movs	r0, #38
 1719 0194 FFF7FEFF 		bl	IPS_WriteData_Byte
 1720              	.LVL220:
 277:Src/graphics.c ****   IPS_WriteData_Byte(0x36);
 1721              		.loc 1 277 3 view .LVU385
 1722 0198 3620     		movs	r0, #54
 1723 019a FFF7FEFF 		bl	IPS_WriteData_Byte
 1724              	.LVL221:
 278:Src/graphics.c ****   IPS_WriteData_Byte(0x00);
 1725              		.loc 1 278 3 view .LVU386
 1726 019e 0020     		movs	r0, #0
 1727 01a0 FFF7FEFF 		bl	IPS_WriteData_Byte
 1728              	.LVL222:
 279:Src/graphics.c ****   IPS_WriteData_Byte(0x0D);
 1729              		.loc 1 279 3 view .LVU387
 1730 01a4 0D20     		movs	r0, #13
 1731 01a6 FFF7FEFF 		bl	IPS_WriteData_Byte
 1732              	.LVL223:
 280:Src/graphics.c ****   IPS_WriteData_Byte(0x0E);
 1733              		.loc 1 280 3 view .LVU388
 1734 01aa 0E20     		movs	r0, #14
 1735 01ac FFF7FEFF 		bl	IPS_WriteData_Byte
 1736              	.LVL224:
 281:Src/graphics.c ****   IPS_WriteData_Byte(0x10);
 1737              		.loc 1 281 3 view .LVU389
 1738 01b0 1020     		movs	r0, #16
 1739 01b2 FFF7FEFF 		bl	IPS_WriteData_Byte
 1740              	.LVL225:
 282:Src/graphics.c **** 
 283:Src/graphics.c ****   IPS_WriteReg(0x3A);
 1741              		.loc 1 283 3 view .LVU390
 1742 01b6 3A20     		movs	r0, #58
 1743 01b8 FFF7FEFF 		bl	IPS_WriteReg
 1744              	.LVL226:
 284:Src/graphics.c ****   IPS_WriteData_Byte(0x05);
 1745              		.loc 1 284 3 view .LVU391
 1746 01bc 0520     		movs	r0, #5
 1747 01be FFF7FEFF 		bl	IPS_WriteData_Byte
 1748              	.LVL227:
 285:Src/graphics.c **** 
 286:Src/graphics.c ****   IPS_WriteReg(0x36);
 1749              		.loc 1 286 3 view .LVU392
 1750 01c2 3620     		movs	r0, #54
ARM GAS  /tmp/ccYF30DA.s 			page 41


 1751 01c4 FFF7FEFF 		bl	IPS_WriteReg
 1752              	.LVL228:
 287:Src/graphics.c ****   IPS_WriteData_Byte(0xA8);
 1753              		.loc 1 287 3 view .LVU393
 1754 01c8 A820     		movs	r0, #168
 1755 01ca FFF7FEFF 		bl	IPS_WriteData_Byte
 1756              	.LVL229:
 288:Src/graphics.c **** 
 289:Src/graphics.c ****   IPS_WriteReg(0x29);
 1757              		.loc 1 289 3 view .LVU394
 1758 01ce 2920     		movs	r0, #41
 1759 01d0 FFF7FEFF 		bl	IPS_WriteReg
 1760              	.LVL230:
 290:Src/graphics.c **** }
 1761              		.loc 1 290 1 is_stmt 0 view .LVU395
 1762              		@ sp needed
 1763 01d4 10BD     		pop	{r4, pc}
 1764              		.cfi_endproc
 1765              	.LFE55:
 1767              		.comm	IPS,6540,4
 1768              		.text
 1769              	.Letext0:
 1770              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1771              		.file 3 "Inc/fonts.h"
 1772              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1773              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1774              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1775              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1776              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 1777              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1778              		.file 10 "Inc/graphics.h"
 1779              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  /tmp/ccYF30DA.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 graphics.c
     /tmp/ccYF30DA.s:16     .text.IPS_SetPixel_buf:0000000000000000 $t
     /tmp/ccYF30DA.s:24     .text.IPS_SetPixel_buf:0000000000000000 IPS_SetPixel_buf
     /tmp/ccYF30DA.s:61     .text.IPS_SetPixel_buf:000000000000001c $d
                            *COM*:000000000000198c IPS
     /tmp/ccYF30DA.s:66     .text.IPS_DrawChar_Buf:0000000000000000 $t
     /tmp/ccYF30DA.s:73     .text.IPS_DrawChar_Buf:0000000000000000 IPS_DrawChar_Buf
     /tmp/ccYF30DA.s:271    .text.IPS_DrawString_Buf:0000000000000000 $t
     /tmp/ccYF30DA.s:278    .text.IPS_DrawString_Buf:0000000000000000 IPS_DrawString_Buf
     /tmp/ccYF30DA.s:429    .text.IPS_DrawString_R:0000000000000000 $t
     /tmp/ccYF30DA.s:436    .text.IPS_DrawString_R:0000000000000000 IPS_DrawString_R
     /tmp/ccYF30DA.s:452    .text.IPS_Reset:0000000000000000 $t
     /tmp/ccYF30DA.s:459    .text.IPS_Reset:0000000000000000 IPS_Reset
     /tmp/ccYF30DA.s:512    .text.IPS_Reset:000000000000003c $d
     /tmp/ccYF30DA.s:517    .text.IPS_WriteData_Byte:0000000000000000 $t
     /tmp/ccYF30DA.s:524    .text.IPS_WriteData_Byte:0000000000000000 IPS_WriteData_Byte
     /tmp/ccYF30DA.s:572    .text.IPS_WriteData_Byte:0000000000000030 $d
     /tmp/ccYF30DA.s:578    .text.IPS_WriteData_Word:0000000000000000 $t
     /tmp/ccYF30DA.s:585    .text.IPS_WriteData_Word:0000000000000000 IPS_WriteData_Word
     /tmp/ccYF30DA.s:633    .text.IPS_WriteData_Word:0000000000000030 $d
     /tmp/ccYF30DA.s:639    .text.IPS_WriteReg:0000000000000000 $t
     /tmp/ccYF30DA.s:646    .text.IPS_WriteReg:0000000000000000 IPS_WriteReg
     /tmp/ccYF30DA.s:694    .text.IPS_WriteReg:0000000000000030 $d
     /tmp/ccYF30DA.s:700    .text.IPS_SetCursor:0000000000000000 $t
     /tmp/ccYF30DA.s:707    .text.IPS_SetCursor:0000000000000000 IPS_SetCursor
     /tmp/ccYF30DA.s:808    .text.IPS_WriteBuf:0000000000000000 $t
     /tmp/ccYF30DA.s:815    .text.IPS_WriteBuf:0000000000000000 IPS_WriteBuf
     /tmp/ccYF30DA.s:862    .text.IPS_WriteBuf:0000000000000034 $d
     /tmp/ccYF30DA.s:870    .text.IPS_SetUWORD:0000000000000000 $t
     /tmp/ccYF30DA.s:877    .text.IPS_SetUWORD:0000000000000000 IPS_SetUWORD
     /tmp/ccYF30DA.s:909    .text.IPS_SetPixel:0000000000000000 $t
     /tmp/ccYF30DA.s:916    .text.IPS_SetPixel:0000000000000000 IPS_SetPixel
     /tmp/ccYF30DA.s:962    .text.IPS_DrawChar:0000000000000000 $t
     /tmp/ccYF30DA.s:969    .text.IPS_DrawChar:0000000000000000 IPS_DrawChar
     /tmp/ccYF30DA.s:1194   .text.IPS_DrawString:0000000000000000 $t
     /tmp/ccYF30DA.s:1201   .text.IPS_DrawString:0000000000000000 IPS_DrawString
     /tmp/ccYF30DA.s:1345   .text.IPS_Clear:0000000000000000 $t
     /tmp/ccYF30DA.s:1352   .text.IPS_Clear:0000000000000000 IPS_Clear
     /tmp/ccYF30DA.s:1432   .text.IPS_Init:0000000000000000 $t
     /tmp/ccYF30DA.s:1439   .text.IPS_Init:0000000000000000 IPS_Init

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_Transmit_DMA
hspi1
